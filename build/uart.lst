ARM GAS  /tmp/ccuB66jj.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_ClearIntFlag,"ax",%progbits
  18              		.align	1
  19              		.global	UART_ClearIntFlag
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	UART_ClearIntFlag:
  27              	.LFB195:
  28              		.file 1 "Drivers/Library/StdDriver/src/uart.c"
   1:Drivers/Library/StdDriver/src/uart.c **** /**************************************************************************//**
   2:Drivers/Library/StdDriver/src/uart.c ****  * @file     uart.c
   3:Drivers/Library/StdDriver/src/uart.c ****  * @version  V3.00
   4:Drivers/Library/StdDriver/src/uart.c ****  * @brief    M480 series UART driver source file
   5:Drivers/Library/StdDriver/src/uart.c ****  *
   6:Drivers/Library/StdDriver/src/uart.c ****  * SPDX-License-Identifier: Apache-2.0
   7:Drivers/Library/StdDriver/src/uart.c ****  * @copyright (C) 2016-2020 Nuvoton Technology Corp. All rights reserved.
   8:Drivers/Library/StdDriver/src/uart.c **** *****************************************************************************/
   9:Drivers/Library/StdDriver/src/uart.c **** 
  10:Drivers/Library/StdDriver/src/uart.c **** #include <stdio.h>
  11:Drivers/Library/StdDriver/src/uart.c **** #include "NuMicro.h"
  12:Drivers/Library/StdDriver/src/uart.c **** 
  13:Drivers/Library/StdDriver/src/uart.c **** /** @addtogroup Standard_Driver Standard Driver
  14:Drivers/Library/StdDriver/src/uart.c ****   @{
  15:Drivers/Library/StdDriver/src/uart.c **** */
  16:Drivers/Library/StdDriver/src/uart.c **** 
  17:Drivers/Library/StdDriver/src/uart.c **** /** @addtogroup UART_Driver UART Driver
  18:Drivers/Library/StdDriver/src/uart.c ****   @{
  19:Drivers/Library/StdDriver/src/uart.c **** */
  20:Drivers/Library/StdDriver/src/uart.c **** 
  21:Drivers/Library/StdDriver/src/uart.c **** /** @addtogroup UART_EXPORTED_FUNCTIONS UART Exported Functions
  22:Drivers/Library/StdDriver/src/uart.c ****   @{
  23:Drivers/Library/StdDriver/src/uart.c **** */
  24:Drivers/Library/StdDriver/src/uart.c **** 
  25:Drivers/Library/StdDriver/src/uart.c **** /**
  26:Drivers/Library/StdDriver/src/uart.c ****  *    @brief        Clear UART specified interrupt flag
  27:Drivers/Library/StdDriver/src/uart.c ****  *
  28:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    uart                The pointer of the specified UART module.
  29:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    u32InterruptFlag    The specified interrupt of UART module.
  30:Drivers/Library/StdDriver/src/uart.c ****  *                                      - \ref UART_INTSTS_LININT_Msk    : LIN bus interrupt
ARM GAS  /tmp/ccuB66jj.s 			page 2


  31:Drivers/Library/StdDriver/src/uart.c ****  *                                      - \ref UART_INTSTS_WKIF_Msk      : Wake-up interrupt
  32:Drivers/Library/StdDriver/src/uart.c ****  *                                      - \ref UART_INTSTS_BUFERRINT_Msk : Buffer Error interrupt
  33:Drivers/Library/StdDriver/src/uart.c ****  *                                      - \ref UART_INTSTS_MODEMINT_Msk  : Modem Status interrupt
  34:Drivers/Library/StdDriver/src/uart.c ****  *                                      - \ref UART_INTSTS_RLSINT_Msk    : Receive Line Status inte
  35:Drivers/Library/StdDriver/src/uart.c ****  *
  36:Drivers/Library/StdDriver/src/uart.c ****  *    @return       None
  37:Drivers/Library/StdDriver/src/uart.c ****  *
  38:Drivers/Library/StdDriver/src/uart.c ****  *    @details      The function is used to clear UART specified interrupt flag.
  39:Drivers/Library/StdDriver/src/uart.c ****  */
  40:Drivers/Library/StdDriver/src/uart.c **** 
  41:Drivers/Library/StdDriver/src/uart.c **** void UART_ClearIntFlag(UART_T* uart, uint32_t u32InterruptFlag)
  42:Drivers/Library/StdDriver/src/uart.c **** {
  29              		.loc 1 42 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 7, -4
  38 0002 83B0     		sub	sp, sp, #12
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
  45 0008 3960     		str	r1, [r7]
  43:Drivers/Library/StdDriver/src/uart.c **** 
  44:Drivers/Library/StdDriver/src/uart.c ****     if(u32InterruptFlag & UART_INTSTS_RLSINT_Msk)   /* Clear Receive Line Status Interrupt */
  46              		.loc 1 44 25
  47 000a 3B68     		ldr	r3, [r7]
  48 000c 03F48063 		and	r3, r3, #1024
  49              		.loc 1 44 7
  50 0010 002B     		cmp	r3, #0
  51 0012 05D0     		beq	.L2
  45:Drivers/Library/StdDriver/src/uart.c ****     {
  46:Drivers/Library/StdDriver/src/uart.c ****         uart->FIFOSTS = UART_FIFOSTS_BIF_Msk | UART_FIFOSTS_FEF_Msk | UART_FIFOSTS_PEF_Msk;
  52              		.loc 1 46 23
  53 0014 7B68     		ldr	r3, [r7, #4]
  54 0016 7022     		movs	r2, #112
  55 0018 9A61     		str	r2, [r3, #24]
  47:Drivers/Library/StdDriver/src/uart.c ****         uart->FIFOSTS = UART_FIFOSTS_ADDRDETF_Msk;
  56              		.loc 1 47 23
  57 001a 7B68     		ldr	r3, [r7, #4]
  58 001c 0822     		movs	r2, #8
  59 001e 9A61     		str	r2, [r3, #24]
  60              	.L2:
  48:Drivers/Library/StdDriver/src/uart.c ****     }
  49:Drivers/Library/StdDriver/src/uart.c **** 
  50:Drivers/Library/StdDriver/src/uart.c ****     if(u32InterruptFlag & UART_INTSTS_MODEMINT_Msk)   /* Clear Modem Status Interrupt */
  61              		.loc 1 50 25
  62 0020 3B68     		ldr	r3, [r7]
  63 0022 03F40063 		and	r3, r3, #2048
  64              		.loc 1 50 7
  65 0026 002B     		cmp	r3, #0
ARM GAS  /tmp/ccuB66jj.s 			page 3


  66 0028 05D0     		beq	.L3
  51:Drivers/Library/StdDriver/src/uart.c ****     {
  52:Drivers/Library/StdDriver/src/uart.c ****         uart->MODEMSTS |= UART_MODEMSTS_CTSDETF_Msk;
  67              		.loc 1 52 24
  68 002a 7B68     		ldr	r3, [r7, #4]
  69 002c 5B69     		ldr	r3, [r3, #20]
  70 002e 43F00102 		orr	r2, r3, #1
  71 0032 7B68     		ldr	r3, [r7, #4]
  72 0034 5A61     		str	r2, [r3, #20]
  73              	.L3:
  53:Drivers/Library/StdDriver/src/uart.c ****     }
  54:Drivers/Library/StdDriver/src/uart.c ****     else
  55:Drivers/Library/StdDriver/src/uart.c ****     {
  56:Drivers/Library/StdDriver/src/uart.c ****     }
  57:Drivers/Library/StdDriver/src/uart.c **** 
  58:Drivers/Library/StdDriver/src/uart.c ****     if(u32InterruptFlag & UART_INTSTS_BUFERRINT_Msk)   /* Clear Buffer Error Interrupt */
  74              		.loc 1 58 25
  75 0036 3B68     		ldr	r3, [r7]
  76 0038 03F40053 		and	r3, r3, #8192
  77              		.loc 1 58 7
  78 003c 002B     		cmp	r3, #0
  79 003e 02D0     		beq	.L4
  59:Drivers/Library/StdDriver/src/uart.c ****     {
  60:Drivers/Library/StdDriver/src/uart.c ****         uart->FIFOSTS = UART_FIFOSTS_RXOVIF_Msk | UART_FIFOSTS_TXOVIF_Msk;
  80              		.loc 1 60 23
  81 0040 7B68     		ldr	r3, [r7, #4]
  82 0042 0E4A     		ldr	r2, .L8
  83 0044 9A61     		str	r2, [r3, #24]
  84              	.L4:
  61:Drivers/Library/StdDriver/src/uart.c ****     }
  62:Drivers/Library/StdDriver/src/uart.c **** 
  63:Drivers/Library/StdDriver/src/uart.c ****     if(u32InterruptFlag & UART_INTSTS_WKINT_Msk)   /* Clear Wake-up Interrupt */
  85              		.loc 1 63 25
  86 0046 3B68     		ldr	r3, [r7]
  87 0048 03F48043 		and	r3, r3, #16384
  88              		.loc 1 63 7
  89 004c 002B     		cmp	r3, #0
  90 004e 02D0     		beq	.L5
  64:Drivers/Library/StdDriver/src/uart.c ****     {
  65:Drivers/Library/StdDriver/src/uart.c ****         uart->WKSTS = UART_WKSTS_CTSWKF_Msk  | UART_WKSTS_DATWKF_Msk  |
  91              		.loc 1 65 21
  92 0050 7B68     		ldr	r3, [r7, #4]
  93 0052 1F22     		movs	r2, #31
  94 0054 5A64     		str	r2, [r3, #68]
  95              	.L5:
  66:Drivers/Library/StdDriver/src/uart.c ****                       UART_WKSTS_RFRTWKF_Msk |UART_WKSTS_RS485WKF_Msk |
  67:Drivers/Library/StdDriver/src/uart.c ****                       UART_WKSTS_TOUTWKF_Msk;
  68:Drivers/Library/StdDriver/src/uart.c ****     }
  69:Drivers/Library/StdDriver/src/uart.c **** 
  70:Drivers/Library/StdDriver/src/uart.c ****     if(u32InterruptFlag & UART_INTSTS_LININT_Msk)   /* Clear LIN Bus Interrupt */
  96              		.loc 1 70 25
  97 0056 3B68     		ldr	r3, [r7]
  98 0058 03F40043 		and	r3, r3, #32768
  99              		.loc 1 70 7
 100 005c 002B     		cmp	r3, #0
 101 005e 06D0     		beq	.L7
  71:Drivers/Library/StdDriver/src/uart.c ****     {
ARM GAS  /tmp/ccuB66jj.s 			page 4


  72:Drivers/Library/StdDriver/src/uart.c ****         uart->INTSTS = UART_INTSTS_LINIF_Msk;
 102              		.loc 1 72 22
 103 0060 7B68     		ldr	r3, [r7, #4]
 104 0062 8022     		movs	r2, #128
 105 0064 DA61     		str	r2, [r3, #28]
  73:Drivers/Library/StdDriver/src/uart.c ****         uart->LINSTS = UART_LINSTS_BITEF_Msk    | UART_LINSTS_BRKDETF_Msk  |
 106              		.loc 1 73 22
 107 0066 7B68     		ldr	r3, [r7, #4]
 108 0068 40F20F32 		movw	r2, #783
 109 006c 9A63     		str	r2, [r3, #56]
 110              	.L7:
  74:Drivers/Library/StdDriver/src/uart.c ****                        UART_LINSTS_SLVSYNCF_Msk | UART_LINSTS_SLVIDPEF_Msk |
  75:Drivers/Library/StdDriver/src/uart.c ****                        UART_LINSTS_SLVHEF_Msk   | UART_LINSTS_SLVHDETF_Msk ;
  76:Drivers/Library/StdDriver/src/uart.c ****     }
  77:Drivers/Library/StdDriver/src/uart.c **** }
 111              		.loc 1 77 1
 112 006e 00BF     		nop
 113 0070 0C37     		adds	r7, r7, #12
 114              	.LCFI3:
 115              		.cfi_def_cfa_offset 4
 116 0072 BD46     		mov	sp, r7
 117              	.LCFI4:
 118              		.cfi_def_cfa_register 13
 119              		@ sp needed
 120 0074 5DF8047B 		ldr	r7, [sp], #4
 121              	.LCFI5:
 122              		.cfi_restore 7
 123              		.cfi_def_cfa_offset 0
 124 0078 7047     		bx	lr
 125              	.L9:
 126 007a 00BF     		.align	2
 127              	.L8:
 128 007c 01000001 		.word	16777217
 129              		.cfi_endproc
 130              	.LFE195:
 132              		.section	.text.UART_Close,"ax",%progbits
 133              		.align	1
 134              		.global	UART_Close
 135              		.syntax unified
 136              		.thumb
 137              		.thumb_func
 138              		.fpu fpv4-sp-d16
 140              	UART_Close:
 141              	.LFB196:
  78:Drivers/Library/StdDriver/src/uart.c **** 
  79:Drivers/Library/StdDriver/src/uart.c **** 
  80:Drivers/Library/StdDriver/src/uart.c **** /**
  81:Drivers/Library/StdDriver/src/uart.c ****  *  @brief      Disable UART interrupt
  82:Drivers/Library/StdDriver/src/uart.c ****  *
  83:Drivers/Library/StdDriver/src/uart.c ****  *  @param[in]  uart The pointer of the specified UART module.
  84:Drivers/Library/StdDriver/src/uart.c ****  *
  85:Drivers/Library/StdDriver/src/uart.c ****  *  @return     None
  86:Drivers/Library/StdDriver/src/uart.c ****  *
  87:Drivers/Library/StdDriver/src/uart.c ****  *  @details    The function is used to disable UART interrupt.
  88:Drivers/Library/StdDriver/src/uart.c ****  */
  89:Drivers/Library/StdDriver/src/uart.c **** void UART_Close(UART_T* uart)
  90:Drivers/Library/StdDriver/src/uart.c **** {
ARM GAS  /tmp/ccuB66jj.s 			page 5


 142              		.loc 1 90 1
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 8
 145              		@ frame_needed = 1, uses_anonymous_args = 0
 146              		@ link register save eliminated.
 147 0000 80B4     		push	{r7}
 148              	.LCFI6:
 149              		.cfi_def_cfa_offset 4
 150              		.cfi_offset 7, -4
 151 0002 83B0     		sub	sp, sp, #12
 152              	.LCFI7:
 153              		.cfi_def_cfa_offset 16
 154 0004 00AF     		add	r7, sp, #0
 155              	.LCFI8:
 156              		.cfi_def_cfa_register 7
 157 0006 7860     		str	r0, [r7, #4]
  91:Drivers/Library/StdDriver/src/uart.c ****     uart->INTEN = 0ul;
 158              		.loc 1 91 17
 159 0008 7B68     		ldr	r3, [r7, #4]
 160 000a 0022     		movs	r2, #0
 161 000c 5A60     		str	r2, [r3, #4]
  92:Drivers/Library/StdDriver/src/uart.c **** }
 162              		.loc 1 92 1
 163 000e 00BF     		nop
 164 0010 0C37     		adds	r7, r7, #12
 165              	.LCFI9:
 166              		.cfi_def_cfa_offset 4
 167 0012 BD46     		mov	sp, r7
 168              	.LCFI10:
 169              		.cfi_def_cfa_register 13
 170              		@ sp needed
 171 0014 5DF8047B 		ldr	r7, [sp], #4
 172              	.LCFI11:
 173              		.cfi_restore 7
 174              		.cfi_def_cfa_offset 0
 175 0018 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE196:
 179              		.section	.text.UART_DisableFlowCtrl,"ax",%progbits
 180              		.align	1
 181              		.global	UART_DisableFlowCtrl
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 185              		.fpu fpv4-sp-d16
 187              	UART_DisableFlowCtrl:
 188              	.LFB197:
  93:Drivers/Library/StdDriver/src/uart.c **** 
  94:Drivers/Library/StdDriver/src/uart.c **** 
  95:Drivers/Library/StdDriver/src/uart.c **** /**
  96:Drivers/Library/StdDriver/src/uart.c ****  *  @brief      Disable UART auto flow control function
  97:Drivers/Library/StdDriver/src/uart.c ****  *
  98:Drivers/Library/StdDriver/src/uart.c ****  *  @param[in]  uart The pointer of the specified UART module.
  99:Drivers/Library/StdDriver/src/uart.c ****  *
 100:Drivers/Library/StdDriver/src/uart.c ****  *  @return     None
 101:Drivers/Library/StdDriver/src/uart.c ****  *
 102:Drivers/Library/StdDriver/src/uart.c ****  *  @details    The function is used to disable UART auto flow control.
ARM GAS  /tmp/ccuB66jj.s 			page 6


 103:Drivers/Library/StdDriver/src/uart.c ****  */
 104:Drivers/Library/StdDriver/src/uart.c **** void UART_DisableFlowCtrl(UART_T* uart)
 105:Drivers/Library/StdDriver/src/uart.c **** {
 189              		.loc 1 105 1
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 8
 192              		@ frame_needed = 1, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 194 0000 80B4     		push	{r7}
 195              	.LCFI12:
 196              		.cfi_def_cfa_offset 4
 197              		.cfi_offset 7, -4
 198 0002 83B0     		sub	sp, sp, #12
 199              	.LCFI13:
 200              		.cfi_def_cfa_offset 16
 201 0004 00AF     		add	r7, sp, #0
 202              	.LCFI14:
 203              		.cfi_def_cfa_register 7
 204 0006 7860     		str	r0, [r7, #4]
 106:Drivers/Library/StdDriver/src/uart.c ****     uart->INTEN &= ~(UART_INTEN_ATORTSEN_Msk | UART_INTEN_ATOCTSEN_Msk);
 205              		.loc 1 106 17
 206 0008 7B68     		ldr	r3, [r7, #4]
 207 000a 5B68     		ldr	r3, [r3, #4]
 208 000c 23F44052 		bic	r2, r3, #12288
 209 0010 7B68     		ldr	r3, [r7, #4]
 210 0012 5A60     		str	r2, [r3, #4]
 107:Drivers/Library/StdDriver/src/uart.c **** }
 211              		.loc 1 107 1
 212 0014 00BF     		nop
 213 0016 0C37     		adds	r7, r7, #12
 214              	.LCFI15:
 215              		.cfi_def_cfa_offset 4
 216 0018 BD46     		mov	sp, r7
 217              	.LCFI16:
 218              		.cfi_def_cfa_register 13
 219              		@ sp needed
 220 001a 5DF8047B 		ldr	r7, [sp], #4
 221              	.LCFI17:
 222              		.cfi_restore 7
 223              		.cfi_def_cfa_offset 0
 224 001e 7047     		bx	lr
 225              		.cfi_endproc
 226              	.LFE197:
 228              		.section	.text.UART_DisableInt,"ax",%progbits
 229              		.align	1
 230              		.global	UART_DisableInt
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 234              		.fpu fpv4-sp-d16
 236              	UART_DisableInt:
 237              	.LFB198:
 108:Drivers/Library/StdDriver/src/uart.c **** 
 109:Drivers/Library/StdDriver/src/uart.c **** 
 110:Drivers/Library/StdDriver/src/uart.c **** /**
 111:Drivers/Library/StdDriver/src/uart.c ****  *    @brief        Disable UART specified interrupt
 112:Drivers/Library/StdDriver/src/uart.c ****  *
ARM GAS  /tmp/ccuB66jj.s 			page 7


 113:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    uart                The pointer of the specified UART module.
 114:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    u32InterruptFlag    The specified interrupt of UART module.
 115:Drivers/Library/StdDriver/src/uart.c ****  *                                      - \ref UART_INTEN_WKIEN_Msk      : Wake-up interrupt
 116:Drivers/Library/StdDriver/src/uart.c ****  *                                      - \ref UART_INTEN_LINIEN_Msk     : Lin bus interrupt
 117:Drivers/Library/StdDriver/src/uart.c ****  *                                      - \ref UART_INTEN_BUFERRIEN_Msk  : Buffer Error interrupt
 118:Drivers/Library/StdDriver/src/uart.c ****  *                                      - \ref UART_INTEN_RXTOIEN_Msk    : Rx time-out interrupt
 119:Drivers/Library/StdDriver/src/uart.c ****  *                                      - \ref UART_INTEN_MODEMIEN_Msk   : Modem status interrupt
 120:Drivers/Library/StdDriver/src/uart.c ****  *                                      - \ref UART_INTEN_RLSIEN_Msk     : Receive Line status inte
 121:Drivers/Library/StdDriver/src/uart.c ****  *                                      - \ref UART_INTEN_THREIEN_Msk    : Tx empty interrupt
 122:Drivers/Library/StdDriver/src/uart.c ****  *                                      - \ref UART_INTEN_RDAIEN_Msk     : Rx ready interrupt *
 123:Drivers/Library/StdDriver/src/uart.c ****  *
 124:Drivers/Library/StdDriver/src/uart.c ****  *    @return       None
 125:Drivers/Library/StdDriver/src/uart.c ****  *
 126:Drivers/Library/StdDriver/src/uart.c ****  *    @details      The function is used to disable UART specified interrupt and disable NVIC UART 
 127:Drivers/Library/StdDriver/src/uart.c ****  */
 128:Drivers/Library/StdDriver/src/uart.c **** void UART_DisableInt(UART_T*  uart, uint32_t u32InterruptFlag)
 129:Drivers/Library/StdDriver/src/uart.c **** {
 238              		.loc 1 129 1
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 8
 241              		@ frame_needed = 1, uses_anonymous_args = 0
 242              		@ link register save eliminated.
 243 0000 80B4     		push	{r7}
 244              	.LCFI18:
 245              		.cfi_def_cfa_offset 4
 246              		.cfi_offset 7, -4
 247 0002 83B0     		sub	sp, sp, #12
 248              	.LCFI19:
 249              		.cfi_def_cfa_offset 16
 250 0004 00AF     		add	r7, sp, #0
 251              	.LCFI20:
 252              		.cfi_def_cfa_register 7
 253 0006 7860     		str	r0, [r7, #4]
 254 0008 3960     		str	r1, [r7]
 130:Drivers/Library/StdDriver/src/uart.c ****     /* Disable UART specified interrupt */
 131:Drivers/Library/StdDriver/src/uart.c ****     UART_DISABLE_INT(uart, u32InterruptFlag);
 255              		.loc 1 131 5
 256 000a 7B68     		ldr	r3, [r7, #4]
 257 000c 5A68     		ldr	r2, [r3, #4]
 258 000e 3B68     		ldr	r3, [r7]
 259 0010 DB43     		mvns	r3, r3
 260 0012 1A40     		ands	r2, r2, r3
 261 0014 7B68     		ldr	r3, [r7, #4]
 262 0016 5A60     		str	r2, [r3, #4]
 132:Drivers/Library/StdDriver/src/uart.c **** }
 263              		.loc 1 132 1
 264 0018 00BF     		nop
 265 001a 0C37     		adds	r7, r7, #12
 266              	.LCFI21:
 267              		.cfi_def_cfa_offset 4
 268 001c BD46     		mov	sp, r7
 269              	.LCFI22:
 270              		.cfi_def_cfa_register 13
 271              		@ sp needed
 272 001e 5DF8047B 		ldr	r7, [sp], #4
 273              	.LCFI23:
 274              		.cfi_restore 7
ARM GAS  /tmp/ccuB66jj.s 			page 8


 275              		.cfi_def_cfa_offset 0
 276 0022 7047     		bx	lr
 277              		.cfi_endproc
 278              	.LFE198:
 280              		.section	.text.UART_EnableFlowCtrl,"ax",%progbits
 281              		.align	1
 282              		.global	UART_EnableFlowCtrl
 283              		.syntax unified
 284              		.thumb
 285              		.thumb_func
 286              		.fpu fpv4-sp-d16
 288              	UART_EnableFlowCtrl:
 289              	.LFB199:
 133:Drivers/Library/StdDriver/src/uart.c **** 
 134:Drivers/Library/StdDriver/src/uart.c **** 
 135:Drivers/Library/StdDriver/src/uart.c **** /**
 136:Drivers/Library/StdDriver/src/uart.c ****  *    @brief        Enable UART auto flow control function
 137:Drivers/Library/StdDriver/src/uart.c ****  *
 138:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    uart    The pointer of the specified UART module.
 139:Drivers/Library/StdDriver/src/uart.c ****  *
 140:Drivers/Library/StdDriver/src/uart.c ****  *    @return       None
 141:Drivers/Library/StdDriver/src/uart.c ****  *
 142:Drivers/Library/StdDriver/src/uart.c ****  *    @details      The function is used to Enable UART auto flow control.
 143:Drivers/Library/StdDriver/src/uart.c ****  */
 144:Drivers/Library/StdDriver/src/uart.c **** void UART_EnableFlowCtrl(UART_T* uart)
 145:Drivers/Library/StdDriver/src/uart.c **** {
 290              		.loc 1 145 1
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 8
 293              		@ frame_needed = 1, uses_anonymous_args = 0
 294              		@ link register save eliminated.
 295 0000 80B4     		push	{r7}
 296              	.LCFI24:
 297              		.cfi_def_cfa_offset 4
 298              		.cfi_offset 7, -4
 299 0002 83B0     		sub	sp, sp, #12
 300              	.LCFI25:
 301              		.cfi_def_cfa_offset 16
 302 0004 00AF     		add	r7, sp, #0
 303              	.LCFI26:
 304              		.cfi_def_cfa_register 7
 305 0006 7860     		str	r0, [r7, #4]
 146:Drivers/Library/StdDriver/src/uart.c ****     /* Set RTS pin output is low level active */
 147:Drivers/Library/StdDriver/src/uart.c ****     uart->MODEM |= UART_MODEM_RTSACTLV_Msk;
 306              		.loc 1 147 17
 307 0008 7B68     		ldr	r3, [r7, #4]
 308 000a 1B69     		ldr	r3, [r3, #16]
 309 000c 43F40072 		orr	r2, r3, #512
 310 0010 7B68     		ldr	r3, [r7, #4]
 311 0012 1A61     		str	r2, [r3, #16]
 148:Drivers/Library/StdDriver/src/uart.c **** 
 149:Drivers/Library/StdDriver/src/uart.c ****     /* Set CTS pin input is low level active */
 150:Drivers/Library/StdDriver/src/uart.c ****     uart->MODEMSTS |= UART_MODEMSTS_CTSACTLV_Msk;
 312              		.loc 1 150 20
 313 0014 7B68     		ldr	r3, [r7, #4]
 314 0016 5B69     		ldr	r3, [r3, #20]
 315 0018 43F48072 		orr	r2, r3, #256
ARM GAS  /tmp/ccuB66jj.s 			page 9


 316 001c 7B68     		ldr	r3, [r7, #4]
 317 001e 5A61     		str	r2, [r3, #20]
 151:Drivers/Library/StdDriver/src/uart.c **** 
 152:Drivers/Library/StdDriver/src/uart.c ****     /* Set RTS and CTS auto flow control enable */
 153:Drivers/Library/StdDriver/src/uart.c ****     uart->INTEN |= UART_INTEN_ATORTSEN_Msk | UART_INTEN_ATOCTSEN_Msk;
 318              		.loc 1 153 17
 319 0020 7B68     		ldr	r3, [r7, #4]
 320 0022 5B68     		ldr	r3, [r3, #4]
 321 0024 43F44052 		orr	r2, r3, #12288
 322 0028 7B68     		ldr	r3, [r7, #4]
 323 002a 5A60     		str	r2, [r3, #4]
 154:Drivers/Library/StdDriver/src/uart.c **** }
 324              		.loc 1 154 1
 325 002c 00BF     		nop
 326 002e 0C37     		adds	r7, r7, #12
 327              	.LCFI27:
 328              		.cfi_def_cfa_offset 4
 329 0030 BD46     		mov	sp, r7
 330              	.LCFI28:
 331              		.cfi_def_cfa_register 13
 332              		@ sp needed
 333 0032 5DF8047B 		ldr	r7, [sp], #4
 334              	.LCFI29:
 335              		.cfi_restore 7
 336              		.cfi_def_cfa_offset 0
 337 0036 7047     		bx	lr
 338              		.cfi_endproc
 339              	.LFE199:
 341              		.section	.text.UART_EnableInt,"ax",%progbits
 342              		.align	1
 343              		.global	UART_EnableInt
 344              		.syntax unified
 345              		.thumb
 346              		.thumb_func
 347              		.fpu fpv4-sp-d16
 349              	UART_EnableInt:
 350              	.LFB200:
 155:Drivers/Library/StdDriver/src/uart.c **** 
 156:Drivers/Library/StdDriver/src/uart.c **** 
 157:Drivers/Library/StdDriver/src/uart.c **** /**
 158:Drivers/Library/StdDriver/src/uart.c ****  *    @brief        The function is used to enable UART specified interrupt and enable NVIC UART IR
 159:Drivers/Library/StdDriver/src/uart.c ****  *
 160:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    uart                The pointer of the specified UART module.
 161:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    u32InterruptFlag    The specified interrupt of UART module:
 162:Drivers/Library/StdDriver/src/uart.c ****  *                                      - \ref UART_INTEN_WKIEN_Msk      : Wake-up interrupt
 163:Drivers/Library/StdDriver/src/uart.c ****  *                                      - \ref UART_INTEN_LINIEN_Msk     : Lin bus interrupt
 164:Drivers/Library/StdDriver/src/uart.c ****  *                                      - \ref UART_INTEN_BUFERRIEN_Msk  : Buffer Error interrupt
 165:Drivers/Library/StdDriver/src/uart.c ****  *                                      - \ref UART_INTEN_RXTOIEN_Msk    : Rx time-out interrupt
 166:Drivers/Library/StdDriver/src/uart.c ****  *                                      - \ref UART_INTEN_MODEMIEN_Msk   : Modem status interrupt
 167:Drivers/Library/StdDriver/src/uart.c ****  *                                      - \ref UART_INTEN_RLSIEN_Msk     : Receive Line status inte
 168:Drivers/Library/StdDriver/src/uart.c ****  *                                      - \ref UART_INTEN_THREIEN_Msk    : Tx empty interrupt
 169:Drivers/Library/StdDriver/src/uart.c ****  *                                      - \ref UART_INTEN_RDAIEN_Msk     : Rx ready interrupt *
 170:Drivers/Library/StdDriver/src/uart.c ****  *
 171:Drivers/Library/StdDriver/src/uart.c ****  *    @return       None
 172:Drivers/Library/StdDriver/src/uart.c ****  *
 173:Drivers/Library/StdDriver/src/uart.c ****  *    @details      The function is used to enable UART specified interrupt and enable NVIC UART IR
 174:Drivers/Library/StdDriver/src/uart.c ****  */
ARM GAS  /tmp/ccuB66jj.s 			page 10


 175:Drivers/Library/StdDriver/src/uart.c **** void UART_EnableInt(UART_T*  uart, uint32_t u32InterruptFlag)
 176:Drivers/Library/StdDriver/src/uart.c **** {
 351              		.loc 1 176 1
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 8
 354              		@ frame_needed = 1, uses_anonymous_args = 0
 355              		@ link register save eliminated.
 356 0000 80B4     		push	{r7}
 357              	.LCFI30:
 358              		.cfi_def_cfa_offset 4
 359              		.cfi_offset 7, -4
 360 0002 83B0     		sub	sp, sp, #12
 361              	.LCFI31:
 362              		.cfi_def_cfa_offset 16
 363 0004 00AF     		add	r7, sp, #0
 364              	.LCFI32:
 365              		.cfi_def_cfa_register 7
 366 0006 7860     		str	r0, [r7, #4]
 367 0008 3960     		str	r1, [r7]
 177:Drivers/Library/StdDriver/src/uart.c ****     /* Enable UART specified interrupt */
 178:Drivers/Library/StdDriver/src/uart.c ****     UART_ENABLE_INT(uart, u32InterruptFlag);
 368              		.loc 1 178 5
 369 000a 7B68     		ldr	r3, [r7, #4]
 370 000c 5A68     		ldr	r2, [r3, #4]
 371 000e 3B68     		ldr	r3, [r7]
 372 0010 1A43     		orrs	r2, r2, r3
 373 0012 7B68     		ldr	r3, [r7, #4]
 374 0014 5A60     		str	r2, [r3, #4]
 179:Drivers/Library/StdDriver/src/uart.c **** }
 375              		.loc 1 179 1
 376 0016 00BF     		nop
 377 0018 0C37     		adds	r7, r7, #12
 378              	.LCFI33:
 379              		.cfi_def_cfa_offset 4
 380 001a BD46     		mov	sp, r7
 381              	.LCFI34:
 382              		.cfi_def_cfa_register 13
 383              		@ sp needed
 384 001c 5DF8047B 		ldr	r7, [sp], #4
 385              	.LCFI35:
 386              		.cfi_restore 7
 387              		.cfi_def_cfa_offset 0
 388 0020 7047     		bx	lr
 389              		.cfi_endproc
 390              	.LFE200:
 392              		.section	.rodata
 393              		.align	2
 394              	.LC0:
 395 0000 001BB700 		.word	12000000
 396 0004 00000000 		.word	0
 397 0008 00800000 		.word	32768
 398 000c 001BB700 		.word	12000000
 399              		.section	.text.UART_Open,"ax",%progbits
 400              		.align	1
 401              		.global	UART_Open
 402              		.syntax unified
 403              		.thumb
ARM GAS  /tmp/ccuB66jj.s 			page 11


 404              		.thumb_func
 405              		.fpu fpv4-sp-d16
 407              	UART_Open:
 408              	.LFB201:
 180:Drivers/Library/StdDriver/src/uart.c **** 
 181:Drivers/Library/StdDriver/src/uart.c **** 
 182:Drivers/Library/StdDriver/src/uart.c **** /**
 183:Drivers/Library/StdDriver/src/uart.c ****  *    @brief        Open and set UART function
 184:Drivers/Library/StdDriver/src/uart.c ****  *
 185:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    uart            The pointer of the specified UART module.
 186:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    u32baudrate     The baudrate of UART module.
 187:Drivers/Library/StdDriver/src/uart.c ****  *
 188:Drivers/Library/StdDriver/src/uart.c ****  *    @return       None
 189:Drivers/Library/StdDriver/src/uart.c ****  *
 190:Drivers/Library/StdDriver/src/uart.c ****  *    @details      This function use to enable UART function and set baud-rate.
 191:Drivers/Library/StdDriver/src/uart.c ****  */
 192:Drivers/Library/StdDriver/src/uart.c **** void UART_Open(UART_T* uart, uint32_t u32baudrate)
 193:Drivers/Library/StdDriver/src/uart.c **** {
 409              		.loc 1 193 1
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 40
 412              		@ frame_needed = 1, uses_anonymous_args = 0
 413 0000 90B5     		push	{r4, r7, lr}
 414              	.LCFI36:
 415              		.cfi_def_cfa_offset 12
 416              		.cfi_offset 4, -12
 417              		.cfi_offset 7, -8
 418              		.cfi_offset 14, -4
 419 0002 8BB0     		sub	sp, sp, #44
 420              	.LCFI37:
 421              		.cfi_def_cfa_offset 56
 422 0004 00AF     		add	r7, sp, #0
 423              	.LCFI38:
 424              		.cfi_def_cfa_register 7
 425 0006 7860     		str	r0, [r7, #4]
 426 0008 3960     		str	r1, [r7]
 194:Drivers/Library/StdDriver/src/uart.c ****     uint32_t u32UartClkSrcSel=0ul, u32UartClkDivNum=0ul;
 427              		.loc 1 194 14
 428 000a 0023     		movs	r3, #0
 429 000c 7B62     		str	r3, [r7, #36]
 430              		.loc 1 194 36
 431 000e 0023     		movs	r3, #0
 432 0010 3B62     		str	r3, [r7, #32]
 195:Drivers/Library/StdDriver/src/uart.c ****     uint32_t u32ClkTbl[4] = {__HXT, 0ul, __LXT, __HIRC};
 433              		.loc 1 195 14
 434 0012 5E4B     		ldr	r3, .L26
 435 0014 07F10C04 		add	r4, r7, #12
 436 0018 0FCB     		ldm	r3, {r0, r1, r2, r3}
 437 001a 84E80F00 		stm	r4, {r0, r1, r2, r3}
 196:Drivers/Library/StdDriver/src/uart.c ****     uint32_t u32Baud_Div = 0ul;
 438              		.loc 1 196 14
 439 001e 0023     		movs	r3, #0
 440 0020 FB61     		str	r3, [r7, #28]
 197:Drivers/Library/StdDriver/src/uart.c **** 
 198:Drivers/Library/StdDriver/src/uart.c **** 
 199:Drivers/Library/StdDriver/src/uart.c ****     if(uart==(UART_T*)UART0)
 441              		.loc 1 199 7
ARM GAS  /tmp/ccuB66jj.s 			page 12


 442 0022 7B68     		ldr	r3, [r7, #4]
 443 0024 5A4A     		ldr	r2, .L26+4
 444 0026 9342     		cmp	r3, r2
 445 0028 0CD1     		bne	.L16
 200:Drivers/Library/StdDriver/src/uart.c ****     {
 201:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock source selection */
 202:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkSrcSel = ((uint32_t)(CLK->CLKSEL1 & CLK_CLKSEL1_UART0SEL_Msk)) >> CLK_CLKSEL1_UAR
 446              		.loc 1 202 43
 447 002a 5A4B     		ldr	r3, .L26+8
 448 002c 5B69     		ldr	r3, [r3, #20]
 449              		.loc 1 202 82
 450 002e 1B0E     		lsrs	r3, r3, #24
 451              		.loc 1 202 26
 452 0030 03F00303 		and	r3, r3, #3
 453 0034 7B62     		str	r3, [r7, #36]
 203:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock divider number */
 204:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkDivNum = (CLK->CLKDIV0 & CLK_CLKDIV0_UART0DIV_Msk) >> CLK_CLKDIV0_UART0DIV_Pos;
 454              		.loc 1 204 32
 455 0036 574B     		ldr	r3, .L26+8
 456 0038 1B6A     		ldr	r3, [r3, #32]
 457              		.loc 1 204 70
 458 003a 1B0A     		lsrs	r3, r3, #8
 459              		.loc 1 204 26
 460 003c 03F00F03 		and	r3, r3, #15
 461 0040 3B62     		str	r3, [r7, #32]
 462 0042 52E0     		b	.L17
 463              	.L16:
 205:Drivers/Library/StdDriver/src/uart.c ****     }
 206:Drivers/Library/StdDriver/src/uart.c ****     else if(uart==(UART_T*)UART1)
 464              		.loc 1 206 12
 465 0044 7B68     		ldr	r3, [r7, #4]
 466 0046 544A     		ldr	r2, .L26+12
 467 0048 9342     		cmp	r3, r2
 468 004a 0CD1     		bne	.L18
 207:Drivers/Library/StdDriver/src/uart.c ****     {
 208:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock source selection */
 209:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkSrcSel = (CLK->CLKSEL1 & CLK_CLKSEL1_UART1SEL_Msk) >> CLK_CLKSEL1_UART1SEL_Pos;
 469              		.loc 1 209 32
 470 004c 514B     		ldr	r3, .L26+8
 471 004e 5B69     		ldr	r3, [r3, #20]
 472              		.loc 1 209 70
 473 0050 9B0E     		lsrs	r3, r3, #26
 474              		.loc 1 209 26
 475 0052 03F00303 		and	r3, r3, #3
 476 0056 7B62     		str	r3, [r7, #36]
 210:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock divider number */
 211:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkDivNum = (CLK->CLKDIV0 & CLK_CLKDIV0_UART1DIV_Msk) >> CLK_CLKDIV0_UART1DIV_Pos;
 477              		.loc 1 211 32
 478 0058 4E4B     		ldr	r3, .L26+8
 479 005a 1B6A     		ldr	r3, [r3, #32]
 480              		.loc 1 211 70
 481 005c 1B0B     		lsrs	r3, r3, #12
 482              		.loc 1 211 26
 483 005e 03F00F03 		and	r3, r3, #15
 484 0062 3B62     		str	r3, [r7, #32]
 485 0064 41E0     		b	.L17
 486              	.L18:
ARM GAS  /tmp/ccuB66jj.s 			page 13


 212:Drivers/Library/StdDriver/src/uart.c ****     }
 213:Drivers/Library/StdDriver/src/uart.c ****     else if(uart==(UART_T*)UART2)
 487              		.loc 1 213 12
 488 0066 7B68     		ldr	r3, [r7, #4]
 489 0068 4C4A     		ldr	r2, .L26+16
 490 006a 9342     		cmp	r3, r2
 491 006c 0BD1     		bne	.L19
 214:Drivers/Library/StdDriver/src/uart.c ****     {
 215:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock source selection */
 216:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkSrcSel = (CLK->CLKSEL3 & CLK_CLKSEL3_UART2SEL_Msk) >> CLK_CLKSEL3_UART2SEL_Pos;
 492              		.loc 1 216 32
 493 006e 494B     		ldr	r3, .L26+8
 494 0070 DB69     		ldr	r3, [r3, #28]
 495              		.loc 1 216 70
 496 0072 1B0E     		lsrs	r3, r3, #24
 497              		.loc 1 216 26
 498 0074 03F00303 		and	r3, r3, #3
 499 0078 7B62     		str	r3, [r7, #36]
 217:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock divider number */
 218:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkDivNum = (CLK->CLKDIV4 & CLK_CLKDIV4_UART2DIV_Msk) >> CLK_CLKDIV4_UART2DIV_Pos;
 500              		.loc 1 218 32
 501 007a 464B     		ldr	r3, .L26+8
 502 007c 1B6B     		ldr	r3, [r3, #48]
 503              		.loc 1 218 26
 504 007e 03F00F03 		and	r3, r3, #15
 505 0082 3B62     		str	r3, [r7, #32]
 506 0084 31E0     		b	.L17
 507              	.L19:
 219:Drivers/Library/StdDriver/src/uart.c ****     }
 220:Drivers/Library/StdDriver/src/uart.c ****     else if(uart==(UART_T*)UART3)
 508              		.loc 1 220 12
 509 0086 7B68     		ldr	r3, [r7, #4]
 510 0088 454A     		ldr	r2, .L26+20
 511 008a 9342     		cmp	r3, r2
 512 008c 0CD1     		bne	.L20
 221:Drivers/Library/StdDriver/src/uart.c ****     {
 222:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock source selection */
 223:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkSrcSel = (CLK->CLKSEL3 & CLK_CLKSEL3_UART3SEL_Msk) >> CLK_CLKSEL3_UART3SEL_Pos;
 513              		.loc 1 223 32
 514 008e 414B     		ldr	r3, .L26+8
 515 0090 DB69     		ldr	r3, [r3, #28]
 516              		.loc 1 223 70
 517 0092 9B0E     		lsrs	r3, r3, #26
 518              		.loc 1 223 26
 519 0094 03F00303 		and	r3, r3, #3
 520 0098 7B62     		str	r3, [r7, #36]
 224:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock divider number */
 225:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkDivNum = (CLK->CLKDIV4 & CLK_CLKDIV4_UART3DIV_Msk) >> CLK_CLKDIV4_UART3DIV_Pos;
 521              		.loc 1 225 32
 522 009a 3E4B     		ldr	r3, .L26+8
 523 009c 1B6B     		ldr	r3, [r3, #48]
 524              		.loc 1 225 70
 525 009e 1B09     		lsrs	r3, r3, #4
 526              		.loc 1 225 26
 527 00a0 03F00F03 		and	r3, r3, #15
 528 00a4 3B62     		str	r3, [r7, #32]
 529 00a6 20E0     		b	.L17
ARM GAS  /tmp/ccuB66jj.s 			page 14


 530              	.L20:
 226:Drivers/Library/StdDriver/src/uart.c ****     }
 227:Drivers/Library/StdDriver/src/uart.c ****     else if(uart==(UART_T*)UART4)
 531              		.loc 1 227 12
 532 00a8 7B68     		ldr	r3, [r7, #4]
 533 00aa 3E4A     		ldr	r2, .L26+24
 534 00ac 9342     		cmp	r3, r2
 535 00ae 0CD1     		bne	.L21
 228:Drivers/Library/StdDriver/src/uart.c ****     {
 229:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock source selection */
 230:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkSrcSel = (CLK->CLKSEL3 & CLK_CLKSEL3_UART4SEL_Msk) >> CLK_CLKSEL3_UART4SEL_Pos;
 536              		.loc 1 230 32
 537 00b0 384B     		ldr	r3, .L26+8
 538 00b2 DB69     		ldr	r3, [r3, #28]
 539              		.loc 1 230 70
 540 00b4 1B0F     		lsrs	r3, r3, #28
 541              		.loc 1 230 26
 542 00b6 03F00303 		and	r3, r3, #3
 543 00ba 7B62     		str	r3, [r7, #36]
 231:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock divider number */
 232:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkDivNum = (CLK->CLKDIV4 & CLK_CLKDIV4_UART4DIV_Msk) >> CLK_CLKDIV4_UART4DIV_Pos;
 544              		.loc 1 232 32
 545 00bc 354B     		ldr	r3, .L26+8
 546 00be 1B6B     		ldr	r3, [r3, #48]
 547              		.loc 1 232 70
 548 00c0 1B0A     		lsrs	r3, r3, #8
 549              		.loc 1 232 26
 550 00c2 03F00F03 		and	r3, r3, #15
 551 00c6 3B62     		str	r3, [r7, #32]
 552 00c8 0FE0     		b	.L17
 553              	.L21:
 233:Drivers/Library/StdDriver/src/uart.c ****     }
 234:Drivers/Library/StdDriver/src/uart.c ****     else if(uart==(UART_T*)UART5)
 554              		.loc 1 234 12
 555 00ca 7B68     		ldr	r3, [r7, #4]
 556 00cc 364A     		ldr	r2, .L26+28
 557 00ce 9342     		cmp	r3, r2
 558 00d0 0BD1     		bne	.L17
 235:Drivers/Library/StdDriver/src/uart.c ****     {
 236:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock source selection */
 237:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkSrcSel = (CLK->CLKSEL3 & CLK_CLKSEL3_UART5SEL_Msk) >> CLK_CLKSEL3_UART5SEL_Pos;
 559              		.loc 1 237 32
 560 00d2 304B     		ldr	r3, .L26+8
 561 00d4 DB69     		ldr	r3, [r3, #28]
 562              		.loc 1 237 70
 563 00d6 9B0F     		lsrs	r3, r3, #30
 564              		.loc 1 237 26
 565 00d8 03F00303 		and	r3, r3, #3
 566 00dc 7B62     		str	r3, [r7, #36]
 238:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock divider number */
 239:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkDivNum = (CLK->CLKDIV4 & CLK_CLKDIV4_UART5DIV_Msk) >> CLK_CLKDIV4_UART5DIV_Pos;
 567              		.loc 1 239 32
 568 00de 2D4B     		ldr	r3, .L26+8
 569 00e0 1B6B     		ldr	r3, [r3, #48]
 570              		.loc 1 239 70
 571 00e2 1B0B     		lsrs	r3, r3, #12
 572              		.loc 1 239 26
ARM GAS  /tmp/ccuB66jj.s 			page 15


 573 00e4 03F00F03 		and	r3, r3, #15
 574 00e8 3B62     		str	r3, [r7, #32]
 575              	.L17:
 240:Drivers/Library/StdDriver/src/uart.c ****     }
 241:Drivers/Library/StdDriver/src/uart.c **** 
 242:Drivers/Library/StdDriver/src/uart.c ****     /* Select UART function */
 243:Drivers/Library/StdDriver/src/uart.c ****     uart->FUNCSEL = UART_FUNCSEL_UART;
 576              		.loc 1 243 19
 577 00ea 7B68     		ldr	r3, [r7, #4]
 578 00ec 0022     		movs	r2, #0
 579 00ee 1A63     		str	r2, [r3, #48]
 244:Drivers/Library/StdDriver/src/uart.c **** 
 245:Drivers/Library/StdDriver/src/uart.c ****     /* Set UART line configuration */
 246:Drivers/Library/StdDriver/src/uart.c ****     uart->LINE = UART_WORD_LEN_8 | UART_PARITY_NONE | UART_STOP_BIT_1;
 580              		.loc 1 246 16
 581 00f0 7B68     		ldr	r3, [r7, #4]
 582 00f2 0322     		movs	r2, #3
 583 00f4 DA60     		str	r2, [r3, #12]
 247:Drivers/Library/StdDriver/src/uart.c **** 
 248:Drivers/Library/StdDriver/src/uart.c ****     /* Set UART Rx and RTS trigger level */
 249:Drivers/Library/StdDriver/src/uart.c ****     uart->FIFO &= ~(UART_FIFO_RFITL_Msk | UART_FIFO_RTSTRGLV_Msk);
 584              		.loc 1 249 16
 585 00f6 7B68     		ldr	r3, [r7, #4]
 586 00f8 9B68     		ldr	r3, [r3, #8]
 587 00fa 23F47023 		bic	r3, r3, #983040
 588 00fe 23F0F003 		bic	r3, r3, #240
 589 0102 7A68     		ldr	r2, [r7, #4]
 590 0104 9360     		str	r3, [r2, #8]
 250:Drivers/Library/StdDriver/src/uart.c **** 
 251:Drivers/Library/StdDriver/src/uart.c ****     /* Get PLL clock frequency if UART clock source selection is PLL */
 252:Drivers/Library/StdDriver/src/uart.c ****     if(u32UartClkSrcSel == 1ul)
 591              		.loc 1 252 7
 592 0106 7B6A     		ldr	r3, [r7, #36]
 593 0108 012B     		cmp	r3, #1
 594 010a 08D1     		bne	.L22
 253:Drivers/Library/StdDriver/src/uart.c ****     {
 254:Drivers/Library/StdDriver/src/uart.c ****         u32ClkTbl[u32UartClkSrcSel] = CLK_GetPLLClockFreq();
 595              		.loc 1 254 39
 596 010c FFF7FEFF 		bl	CLK_GetPLLClockFreq
 597 0110 0246     		mov	r2, r0
 598              		.loc 1 254 37
 599 0112 7B6A     		ldr	r3, [r7, #36]
 600 0114 9B00     		lsls	r3, r3, #2
 601 0116 2833     		adds	r3, r3, #40
 602 0118 3B44     		add	r3, r3, r7
 603 011a 43F81C2C 		str	r2, [r3, #-28]
 604              	.L22:
 255:Drivers/Library/StdDriver/src/uart.c ****     }
 256:Drivers/Library/StdDriver/src/uart.c **** 
 257:Drivers/Library/StdDriver/src/uart.c ****     /* Set UART baud rate */
 258:Drivers/Library/StdDriver/src/uart.c ****     if(u32baudrate != 0ul)
 605              		.loc 1 258 7
 606 011e 3B68     		ldr	r3, [r7]
 607 0120 002B     		cmp	r3, #0
 608 0122 2FD0     		beq	.L25
 259:Drivers/Library/StdDriver/src/uart.c ****     {
 260:Drivers/Library/StdDriver/src/uart.c ****         u32Baud_Div = UART_BAUD_MODE2_DIVIDER((u32ClkTbl[u32UartClkSrcSel]) / (u32UartClkDivNum + 1
ARM GAS  /tmp/ccuB66jj.s 			page 16


 609              		.loc 1 260 23
 610 0124 7B6A     		ldr	r3, [r7, #36]
 611 0126 9B00     		lsls	r3, r3, #2
 612 0128 2833     		adds	r3, r3, #40
 613 012a 3B44     		add	r3, r3, r7
 614 012c 53F81C2C 		ldr	r2, [r3, #-28]
 615 0130 3B6A     		ldr	r3, [r7, #32]
 616 0132 0133     		adds	r3, r3, #1
 617 0134 B2FBF3F2 		udiv	r2, r2, r3
 618 0138 3B68     		ldr	r3, [r7]
 619 013a 5B08     		lsrs	r3, r3, #1
 620 013c 1A44     		add	r2, r2, r3
 621 013e 3B68     		ldr	r3, [r7]
 622 0140 B2FBF3F3 		udiv	r3, r2, r3
 623              		.loc 1 260 21
 624 0144 023B     		subs	r3, r3, #2
 625 0146 FB61     		str	r3, [r7, #28]
 261:Drivers/Library/StdDriver/src/uart.c **** 
 262:Drivers/Library/StdDriver/src/uart.c ****         if(u32Baud_Div > 0xFFFFul)
 626              		.loc 1 262 11
 627 0148 FB69     		ldr	r3, [r7, #28]
 628 014a B3F5803F 		cmp	r3, #65536
 629 014e 14D3     		bcc	.L24
 263:Drivers/Library/StdDriver/src/uart.c ****         {
 264:Drivers/Library/StdDriver/src/uart.c ****             uart->BAUD = (UART_BAUD_MODE0 | UART_BAUD_MODE0_DIVIDER((u32ClkTbl[u32UartClkSrcSel]) /
 630              		.loc 1 264 45
 631 0150 7B6A     		ldr	r3, [r7, #36]
 632 0152 9B00     		lsls	r3, r3, #2
 633 0154 2833     		adds	r3, r3, #40
 634 0156 3B44     		add	r3, r3, r7
 635 0158 53F81C2C 		ldr	r2, [r3, #-28]
 636 015c 3B6A     		ldr	r3, [r7, #32]
 637 015e 0133     		adds	r3, r3, #1
 638 0160 B2FBF3F2 		udiv	r2, r2, r3
 639 0164 3B68     		ldr	r3, [r7]
 640 0166 DB00     		lsls	r3, r3, #3
 641 0168 1A44     		add	r2, r2, r3
 642 016a 3B68     		ldr	r3, [r7]
 643 016c B2FBF3F3 		udiv	r3, r2, r3
 644 0170 1B09     		lsrs	r3, r3, #4
 645              		.loc 1 264 43
 646 0172 9A1E     		subs	r2, r3, #2
 647              		.loc 1 264 24
 648 0174 7B68     		ldr	r3, [r7, #4]
 649 0176 5A62     		str	r2, [r3, #36]
 265:Drivers/Library/StdDriver/src/uart.c ****         }
 266:Drivers/Library/StdDriver/src/uart.c ****         else
 267:Drivers/Library/StdDriver/src/uart.c ****         {
 268:Drivers/Library/StdDriver/src/uart.c ****             uart->BAUD = (UART_BAUD_MODE2 | u32Baud_Div);
 269:Drivers/Library/StdDriver/src/uart.c ****         }
 270:Drivers/Library/StdDriver/src/uart.c ****     }
 271:Drivers/Library/StdDriver/src/uart.c **** }
 650              		.loc 1 271 1
 651 0178 04E0     		b	.L25
 652              	.L24:
 268:Drivers/Library/StdDriver/src/uart.c ****         }
 653              		.loc 1 268 43
ARM GAS  /tmp/ccuB66jj.s 			page 17


 654 017a FB69     		ldr	r3, [r7, #28]
 655 017c 43F04052 		orr	r2, r3, #805306368
 268:Drivers/Library/StdDriver/src/uart.c ****         }
 656              		.loc 1 268 24
 657 0180 7B68     		ldr	r3, [r7, #4]
 658 0182 5A62     		str	r2, [r3, #36]
 659              	.L25:
 660              		.loc 1 271 1
 661 0184 00BF     		nop
 662 0186 2C37     		adds	r7, r7, #44
 663              	.LCFI39:
 664              		.cfi_def_cfa_offset 12
 665 0188 BD46     		mov	sp, r7
 666              	.LCFI40:
 667              		.cfi_def_cfa_register 13
 668              		@ sp needed
 669 018a 90BD     		pop	{r4, r7, pc}
 670              	.L27:
 671              		.align	2
 672              	.L26:
 673 018c 00000000 		.word	.LC0
 674 0190 00000740 		.word	1074200576
 675 0194 00020040 		.word	1073742336
 676 0198 00100740 		.word	1074204672
 677 019c 00200740 		.word	1074208768
 678 01a0 00300740 		.word	1074212864
 679 01a4 00400740 		.word	1074216960
 680 01a8 00500740 		.word	1074221056
 681              		.cfi_endproc
 682              	.LFE201:
 684              		.section	.text.UART_Read,"ax",%progbits
 685              		.align	1
 686              		.global	UART_Read
 687              		.syntax unified
 688              		.thumb
 689              		.thumb_func
 690              		.fpu fpv4-sp-d16
 692              	UART_Read:
 693              	.LFB202:
 272:Drivers/Library/StdDriver/src/uart.c **** 
 273:Drivers/Library/StdDriver/src/uart.c **** 
 274:Drivers/Library/StdDriver/src/uart.c **** /**
 275:Drivers/Library/StdDriver/src/uart.c ****  *    @brief        Read UART data
 276:Drivers/Library/StdDriver/src/uart.c ****  *
 277:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    uart            The pointer of the specified UART module.
 278:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    pu8RxBuf        The buffer to receive the data of receive FIFO.
 279:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    u32ReadBytes    The the read bytes number of data.
 280:Drivers/Library/StdDriver/src/uart.c ****  *
 281:Drivers/Library/StdDriver/src/uart.c ****  *    @return       u32Count Receive byte count
 282:Drivers/Library/StdDriver/src/uart.c ****  *
 283:Drivers/Library/StdDriver/src/uart.c ****  *    @details      The function is used to read Rx data from RX FIFO and the data will be stored i
 284:Drivers/Library/StdDriver/src/uart.c ****  */
 285:Drivers/Library/StdDriver/src/uart.c **** uint32_t UART_Read(UART_T* uart, uint8_t pu8RxBuf[], uint32_t u32ReadBytes)
 286:Drivers/Library/StdDriver/src/uart.c **** {
 694              		.loc 1 286 1
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 32
ARM GAS  /tmp/ccuB66jj.s 			page 18


 697              		@ frame_needed = 1, uses_anonymous_args = 0
 698              		@ link register save eliminated.
 699 0000 80B4     		push	{r7}
 700              	.LCFI41:
 701              		.cfi_def_cfa_offset 4
 702              		.cfi_offset 7, -4
 703 0002 89B0     		sub	sp, sp, #36
 704              	.LCFI42:
 705              		.cfi_def_cfa_offset 40
 706 0004 00AF     		add	r7, sp, #0
 707              	.LCFI43:
 708              		.cfi_def_cfa_register 7
 709 0006 F860     		str	r0, [r7, #12]
 710 0008 B960     		str	r1, [r7, #8]
 711 000a 7A60     		str	r2, [r7, #4]
 287:Drivers/Library/StdDriver/src/uart.c ****     uint32_t  u32Count, u32delayno;
 288:Drivers/Library/StdDriver/src/uart.c ****     uint32_t  u32Exit = 0ul;
 712              		.loc 1 288 15
 713 000c 0023     		movs	r3, #0
 714 000e 7B61     		str	r3, [r7, #20]
 289:Drivers/Library/StdDriver/src/uart.c **** 
 290:Drivers/Library/StdDriver/src/uart.c ****     for(u32Count = 0ul; u32Count < u32ReadBytes; u32Count++)
 715              		.loc 1 290 18
 716 0010 0023     		movs	r3, #0
 717 0012 FB61     		str	r3, [r7, #28]
 718              		.loc 1 290 5
 719 0014 1FE0     		b	.L29
 720              	.L35:
 291:Drivers/Library/StdDriver/src/uart.c ****     {
 292:Drivers/Library/StdDriver/src/uart.c ****         u32delayno = 0ul;
 721              		.loc 1 292 20
 722 0016 0023     		movs	r3, #0
 723 0018 BB61     		str	r3, [r7, #24]
 293:Drivers/Library/StdDriver/src/uart.c **** 
 294:Drivers/Library/StdDriver/src/uart.c ****         while(uart->FIFOSTS & UART_FIFOSTS_RXEMPTY_Msk)   /* Check RX empty => failed */
 724              		.loc 1 294 14
 725 001a 09E0     		b	.L30
 726              	.L32:
 295:Drivers/Library/StdDriver/src/uart.c ****         {
 296:Drivers/Library/StdDriver/src/uart.c ****             u32delayno++;
 727              		.loc 1 296 23
 728 001c BB69     		ldr	r3, [r7, #24]
 729 001e 0133     		adds	r3, r3, #1
 730 0020 BB61     		str	r3, [r7, #24]
 297:Drivers/Library/StdDriver/src/uart.c ****             if(u32delayno >= 0x40000000ul)
 731              		.loc 1 297 15
 732 0022 BB69     		ldr	r3, [r7, #24]
 733 0024 B3F1804F 		cmp	r3, #1073741824
 734 0028 02D3     		bcc	.L30
 298:Drivers/Library/StdDriver/src/uart.c ****             {
 299:Drivers/Library/StdDriver/src/uart.c ****                 u32Exit = 1ul;
 735              		.loc 1 299 25
 736 002a 0123     		movs	r3, #1
 737 002c 7B61     		str	r3, [r7, #20]
 300:Drivers/Library/StdDriver/src/uart.c ****                 break;
 738              		.loc 1 300 17
 739 002e 05E0     		b	.L31
ARM GAS  /tmp/ccuB66jj.s 			page 19


 740              	.L30:
 294:Drivers/Library/StdDriver/src/uart.c ****         {
 741              		.loc 1 294 19
 742 0030 FB68     		ldr	r3, [r7, #12]
 743 0032 9B69     		ldr	r3, [r3, #24]
 294:Drivers/Library/StdDriver/src/uart.c ****         {
 744              		.loc 1 294 29
 745 0034 03F48043 		and	r3, r3, #16384
 294:Drivers/Library/StdDriver/src/uart.c ****         {
 746              		.loc 1 294 14
 747 0038 002B     		cmp	r3, #0
 748 003a EFD1     		bne	.L32
 749              	.L31:
 301:Drivers/Library/StdDriver/src/uart.c ****             }
 302:Drivers/Library/StdDriver/src/uart.c ****             else
 303:Drivers/Library/StdDriver/src/uart.c ****             {
 304:Drivers/Library/StdDriver/src/uart.c ****             }
 305:Drivers/Library/StdDriver/src/uart.c ****         }
 306:Drivers/Library/StdDriver/src/uart.c **** 
 307:Drivers/Library/StdDriver/src/uart.c ****         if(u32Exit == 1ul)
 750              		.loc 1 307 11
 751 003c 7B69     		ldr	r3, [r7, #20]
 752 003e 012B     		cmp	r3, #1
 753 0040 0ED0     		beq	.L37
 308:Drivers/Library/StdDriver/src/uart.c ****         {
 309:Drivers/Library/StdDriver/src/uart.c ****             break;
 310:Drivers/Library/StdDriver/src/uart.c ****         }
 311:Drivers/Library/StdDriver/src/uart.c ****         else
 312:Drivers/Library/StdDriver/src/uart.c ****         {
 313:Drivers/Library/StdDriver/src/uart.c ****             pu8RxBuf[u32Count] = (uint8_t)uart->DAT; /* Get Data from UART RX  */
 754              		.loc 1 313 47 discriminator 2
 755 0042 FB68     		ldr	r3, [r7, #12]
 756 0044 1968     		ldr	r1, [r3]
 757              		.loc 1 313 21 discriminator 2
 758 0046 BA68     		ldr	r2, [r7, #8]
 759 0048 FB69     		ldr	r3, [r7, #28]
 760 004a 1344     		add	r3, r3, r2
 761              		.loc 1 313 34 discriminator 2
 762 004c CAB2     		uxtb	r2, r1
 763              		.loc 1 313 32 discriminator 2
 764 004e 1A70     		strb	r2, [r3]
 290:Drivers/Library/StdDriver/src/uart.c ****     {
 765              		.loc 1 290 58 discriminator 2
 766 0050 FB69     		ldr	r3, [r7, #28]
 767 0052 0133     		adds	r3, r3, #1
 768 0054 FB61     		str	r3, [r7, #28]
 769              	.L29:
 290:Drivers/Library/StdDriver/src/uart.c ****     {
 770              		.loc 1 290 5 discriminator 1
 771 0056 FA69     		ldr	r2, [r7, #28]
 772 0058 7B68     		ldr	r3, [r7, #4]
 773 005a 9A42     		cmp	r2, r3
 774 005c DBD3     		bcc	.L35
 775 005e 00E0     		b	.L34
 776              	.L37:
 309:Drivers/Library/StdDriver/src/uart.c ****         }
 777              		.loc 1 309 13
ARM GAS  /tmp/ccuB66jj.s 			page 20


 778 0060 00BF     		nop
 779              	.L34:
 314:Drivers/Library/StdDriver/src/uart.c ****         }
 315:Drivers/Library/StdDriver/src/uart.c ****     }
 316:Drivers/Library/StdDriver/src/uart.c **** 
 317:Drivers/Library/StdDriver/src/uart.c ****     return u32Count;
 780              		.loc 1 317 12
 781 0062 FB69     		ldr	r3, [r7, #28]
 318:Drivers/Library/StdDriver/src/uart.c **** 
 319:Drivers/Library/StdDriver/src/uart.c **** }
 782              		.loc 1 319 1
 783 0064 1846     		mov	r0, r3
 784 0066 2437     		adds	r7, r7, #36
 785              	.LCFI44:
 786              		.cfi_def_cfa_offset 4
 787 0068 BD46     		mov	sp, r7
 788              	.LCFI45:
 789              		.cfi_def_cfa_register 13
 790              		@ sp needed
 791 006a 5DF8047B 		ldr	r7, [sp], #4
 792              	.LCFI46:
 793              		.cfi_restore 7
 794              		.cfi_def_cfa_offset 0
 795 006e 7047     		bx	lr
 796              		.cfi_endproc
 797              	.LFE202:
 799              		.section	.text.UART_SetLineConfig,"ax",%progbits
 800              		.align	1
 801              		.global	UART_SetLineConfig
 802              		.syntax unified
 803              		.thumb
 804              		.thumb_func
 805              		.fpu fpv4-sp-d16
 807              	UART_SetLineConfig:
 808              	.LFB203:
 320:Drivers/Library/StdDriver/src/uart.c **** 
 321:Drivers/Library/StdDriver/src/uart.c **** 
 322:Drivers/Library/StdDriver/src/uart.c **** /**
 323:Drivers/Library/StdDriver/src/uart.c ****  *    @brief        Set UART line configuration
 324:Drivers/Library/StdDriver/src/uart.c ****  *
 325:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    uart            The pointer of the specified UART module.
 326:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    u32baudrate     The register value of baudrate of UART module.
 327:Drivers/Library/StdDriver/src/uart.c ****  *                                  If u32baudrate = 0, UART baudrate will not change.
 328:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    u32data_width   The data length of UART module.
 329:Drivers/Library/StdDriver/src/uart.c ****  *                                  - \ref UART_WORD_LEN_5
 330:Drivers/Library/StdDriver/src/uart.c ****  *                                  - \ref UART_WORD_LEN_6
 331:Drivers/Library/StdDriver/src/uart.c ****  *                                  - \ref UART_WORD_LEN_7
 332:Drivers/Library/StdDriver/src/uart.c ****  *                                  - \ref UART_WORD_LEN_8
 333:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    u32parity       The parity setting (none/odd/even/mark/space) of UART module.
 334:Drivers/Library/StdDriver/src/uart.c ****  *                                  - \ref UART_PARITY_NONE
 335:Drivers/Library/StdDriver/src/uart.c ****  *                                  - \ref UART_PARITY_ODD
 336:Drivers/Library/StdDriver/src/uart.c ****  *                                  - \ref UART_PARITY_EVEN
 337:Drivers/Library/StdDriver/src/uart.c ****  *                                  - \ref UART_PARITY_MARK
 338:Drivers/Library/StdDriver/src/uart.c ****  *                                  - \ref UART_PARITY_SPACE
 339:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    u32stop_bits    The stop bit length (1/1.5/2 bit) of UART module.
 340:Drivers/Library/StdDriver/src/uart.c ****  *                                  - \ref UART_STOP_BIT_1
 341:Drivers/Library/StdDriver/src/uart.c ****  *                                  - \ref UART_STOP_BIT_1_5
ARM GAS  /tmp/ccuB66jj.s 			page 21


 342:Drivers/Library/StdDriver/src/uart.c ****  *                                  - \ref UART_STOP_BIT_2
 343:Drivers/Library/StdDriver/src/uart.c ****  *
 344:Drivers/Library/StdDriver/src/uart.c ****  *    @return       None
 345:Drivers/Library/StdDriver/src/uart.c ****  *
 346:Drivers/Library/StdDriver/src/uart.c ****  *    @details      This function use to config UART line setting.
 347:Drivers/Library/StdDriver/src/uart.c ****  */
 348:Drivers/Library/StdDriver/src/uart.c **** void UART_SetLineConfig(UART_T* uart, uint32_t u32baudrate, uint32_t u32data_width, uint32_t u32par
 349:Drivers/Library/StdDriver/src/uart.c **** {
 809              		.loc 1 349 1
 810              		.cfi_startproc
 811              		@ args = 4, pretend = 0, frame = 48
 812              		@ frame_needed = 1, uses_anonymous_args = 0
 813 0000 90B5     		push	{r4, r7, lr}
 814              	.LCFI47:
 815              		.cfi_def_cfa_offset 12
 816              		.cfi_offset 4, -12
 817              		.cfi_offset 7, -8
 818              		.cfi_offset 14, -4
 819 0002 8DB0     		sub	sp, sp, #52
 820              	.LCFI48:
 821              		.cfi_def_cfa_offset 64
 822 0004 00AF     		add	r7, sp, #0
 823              	.LCFI49:
 824              		.cfi_def_cfa_register 7
 825 0006 F860     		str	r0, [r7, #12]
 826 0008 B960     		str	r1, [r7, #8]
 827 000a 7A60     		str	r2, [r7, #4]
 828 000c 3B60     		str	r3, [r7]
 350:Drivers/Library/StdDriver/src/uart.c ****     uint32_t u32UartClkSrcSel=0ul, u32UartClkDivNum=0ul;
 829              		.loc 1 350 14
 830 000e 0023     		movs	r3, #0
 831 0010 FB62     		str	r3, [r7, #44]
 832              		.loc 1 350 36
 833 0012 0023     		movs	r3, #0
 834 0014 BB62     		str	r3, [r7, #40]
 351:Drivers/Library/StdDriver/src/uart.c ****     uint32_t u32ClkTbl[4ul] = {__HXT, 0ul, __LXT, __HIRC};
 835              		.loc 1 351 14
 836 0016 5B4B     		ldr	r3, .L48
 837 0018 07F11404 		add	r4, r7, #20
 838 001c 0FCB     		ldm	r3, {r0, r1, r2, r3}
 839 001e 84E80F00 		stm	r4, {r0, r1, r2, r3}
 352:Drivers/Library/StdDriver/src/uart.c ****     uint32_t u32Baud_Div = 0ul;
 840              		.loc 1 352 14
 841 0022 0023     		movs	r3, #0
 842 0024 7B62     		str	r3, [r7, #36]
 353:Drivers/Library/StdDriver/src/uart.c **** 
 354:Drivers/Library/StdDriver/src/uart.c **** 
 355:Drivers/Library/StdDriver/src/uart.c ****     if(uart==(UART_T*)UART0)
 843              		.loc 1 355 7
 844 0026 FB68     		ldr	r3, [r7, #12]
 845 0028 574A     		ldr	r2, .L48+4
 846 002a 9342     		cmp	r3, r2
 847 002c 0CD1     		bne	.L39
 356:Drivers/Library/StdDriver/src/uart.c ****     {
 357:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock source selection */
 358:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkSrcSel = (CLK->CLKSEL1 & CLK_CLKSEL1_UART0SEL_Msk) >> CLK_CLKSEL1_UART0SEL_Pos;
 848              		.loc 1 358 32
ARM GAS  /tmp/ccuB66jj.s 			page 22


 849 002e 574B     		ldr	r3, .L48+8
 850 0030 5B69     		ldr	r3, [r3, #20]
 851              		.loc 1 358 70
 852 0032 1B0E     		lsrs	r3, r3, #24
 853              		.loc 1 358 26
 854 0034 03F00303 		and	r3, r3, #3
 855 0038 FB62     		str	r3, [r7, #44]
 359:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock divider number */
 360:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkDivNum = (CLK->CLKDIV0 & CLK_CLKDIV0_UART0DIV_Msk) >> CLK_CLKDIV0_UART0DIV_Pos;
 856              		.loc 1 360 32
 857 003a 544B     		ldr	r3, .L48+8
 858 003c 1B6A     		ldr	r3, [r3, #32]
 859              		.loc 1 360 70
 860 003e 1B0A     		lsrs	r3, r3, #8
 861              		.loc 1 360 26
 862 0040 03F00F03 		and	r3, r3, #15
 863 0044 BB62     		str	r3, [r7, #40]
 864 0046 52E0     		b	.L40
 865              	.L39:
 361:Drivers/Library/StdDriver/src/uart.c ****     }
 362:Drivers/Library/StdDriver/src/uart.c ****     else if(uart==(UART_T*)UART1)
 866              		.loc 1 362 12
 867 0048 FB68     		ldr	r3, [r7, #12]
 868 004a 514A     		ldr	r2, .L48+12
 869 004c 9342     		cmp	r3, r2
 870 004e 0CD1     		bne	.L41
 363:Drivers/Library/StdDriver/src/uart.c ****     {
 364:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock source selection */
 365:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkSrcSel = (CLK->CLKSEL1 & CLK_CLKSEL1_UART1SEL_Msk) >> CLK_CLKSEL1_UART1SEL_Pos;
 871              		.loc 1 365 32
 872 0050 4E4B     		ldr	r3, .L48+8
 873 0052 5B69     		ldr	r3, [r3, #20]
 874              		.loc 1 365 70
 875 0054 9B0E     		lsrs	r3, r3, #26
 876              		.loc 1 365 26
 877 0056 03F00303 		and	r3, r3, #3
 878 005a FB62     		str	r3, [r7, #44]
 366:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock divider number */
 367:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkDivNum = (CLK->CLKDIV0 & CLK_CLKDIV0_UART1DIV_Msk) >> CLK_CLKDIV0_UART1DIV_Pos;
 879              		.loc 1 367 32
 880 005c 4B4B     		ldr	r3, .L48+8
 881 005e 1B6A     		ldr	r3, [r3, #32]
 882              		.loc 1 367 70
 883 0060 1B0B     		lsrs	r3, r3, #12
 884              		.loc 1 367 26
 885 0062 03F00F03 		and	r3, r3, #15
 886 0066 BB62     		str	r3, [r7, #40]
 887 0068 41E0     		b	.L40
 888              	.L41:
 368:Drivers/Library/StdDriver/src/uart.c ****     }
 369:Drivers/Library/StdDriver/src/uart.c ****     else if(uart==(UART_T*)UART2)
 889              		.loc 1 369 12
 890 006a FB68     		ldr	r3, [r7, #12]
 891 006c 494A     		ldr	r2, .L48+16
 892 006e 9342     		cmp	r3, r2
 893 0070 0BD1     		bne	.L42
 370:Drivers/Library/StdDriver/src/uart.c ****     {
ARM GAS  /tmp/ccuB66jj.s 			page 23


 371:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock source selection */
 372:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkSrcSel = (CLK->CLKSEL3 & CLK_CLKSEL3_UART2SEL_Msk) >> CLK_CLKSEL3_UART2SEL_Pos;
 894              		.loc 1 372 32
 895 0072 464B     		ldr	r3, .L48+8
 896 0074 DB69     		ldr	r3, [r3, #28]
 897              		.loc 1 372 70
 898 0076 1B0E     		lsrs	r3, r3, #24
 899              		.loc 1 372 26
 900 0078 03F00303 		and	r3, r3, #3
 901 007c FB62     		str	r3, [r7, #44]
 373:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock divider number */
 374:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkDivNum = (CLK->CLKDIV4 & CLK_CLKDIV4_UART2DIV_Msk) >> CLK_CLKDIV4_UART2DIV_Pos;
 902              		.loc 1 374 32
 903 007e 434B     		ldr	r3, .L48+8
 904 0080 1B6B     		ldr	r3, [r3, #48]
 905              		.loc 1 374 26
 906 0082 03F00F03 		and	r3, r3, #15
 907 0086 BB62     		str	r3, [r7, #40]
 908 0088 31E0     		b	.L40
 909              	.L42:
 375:Drivers/Library/StdDriver/src/uart.c ****     }
 376:Drivers/Library/StdDriver/src/uart.c ****     else if(uart==(UART_T*)UART3)
 910              		.loc 1 376 12
 911 008a FB68     		ldr	r3, [r7, #12]
 912 008c 424A     		ldr	r2, .L48+20
 913 008e 9342     		cmp	r3, r2
 914 0090 0CD1     		bne	.L43
 377:Drivers/Library/StdDriver/src/uart.c ****     {
 378:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock source selection */
 379:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkSrcSel = (CLK->CLKSEL3 & CLK_CLKSEL3_UART3SEL_Msk) >> CLK_CLKSEL3_UART3SEL_Pos;
 915              		.loc 1 379 32
 916 0092 3E4B     		ldr	r3, .L48+8
 917 0094 DB69     		ldr	r3, [r3, #28]
 918              		.loc 1 379 70
 919 0096 9B0E     		lsrs	r3, r3, #26
 920              		.loc 1 379 26
 921 0098 03F00303 		and	r3, r3, #3
 922 009c FB62     		str	r3, [r7, #44]
 380:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock divider number */
 381:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkDivNum = (CLK->CLKDIV4 & CLK_CLKDIV4_UART3DIV_Msk) >> CLK_CLKDIV4_UART3DIV_Pos;
 923              		.loc 1 381 32
 924 009e 3B4B     		ldr	r3, .L48+8
 925 00a0 1B6B     		ldr	r3, [r3, #48]
 926              		.loc 1 381 70
 927 00a2 1B09     		lsrs	r3, r3, #4
 928              		.loc 1 381 26
 929 00a4 03F00F03 		and	r3, r3, #15
 930 00a8 BB62     		str	r3, [r7, #40]
 931 00aa 20E0     		b	.L40
 932              	.L43:
 382:Drivers/Library/StdDriver/src/uart.c ****     }
 383:Drivers/Library/StdDriver/src/uart.c ****     else if(uart==(UART_T*)UART4)
 933              		.loc 1 383 12
 934 00ac FB68     		ldr	r3, [r7, #12]
 935 00ae 3B4A     		ldr	r2, .L48+24
 936 00b0 9342     		cmp	r3, r2
 937 00b2 0CD1     		bne	.L44
ARM GAS  /tmp/ccuB66jj.s 			page 24


 384:Drivers/Library/StdDriver/src/uart.c ****     {
 385:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock source selection */
 386:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkSrcSel = (CLK->CLKSEL3 & CLK_CLKSEL3_UART4SEL_Msk) >> CLK_CLKSEL3_UART4SEL_Pos;
 938              		.loc 1 386 32
 939 00b4 354B     		ldr	r3, .L48+8
 940 00b6 DB69     		ldr	r3, [r3, #28]
 941              		.loc 1 386 70
 942 00b8 1B0F     		lsrs	r3, r3, #28
 943              		.loc 1 386 26
 944 00ba 03F00303 		and	r3, r3, #3
 945 00be FB62     		str	r3, [r7, #44]
 387:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock divider number */
 388:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkDivNum = (CLK->CLKDIV4 & CLK_CLKDIV4_UART4DIV_Msk) >> CLK_CLKDIV4_UART4DIV_Pos;
 946              		.loc 1 388 32
 947 00c0 324B     		ldr	r3, .L48+8
 948 00c2 1B6B     		ldr	r3, [r3, #48]
 949              		.loc 1 388 70
 950 00c4 1B0A     		lsrs	r3, r3, #8
 951              		.loc 1 388 26
 952 00c6 03F00F03 		and	r3, r3, #15
 953 00ca BB62     		str	r3, [r7, #40]
 954 00cc 0FE0     		b	.L40
 955              	.L44:
 389:Drivers/Library/StdDriver/src/uart.c ****     }
 390:Drivers/Library/StdDriver/src/uart.c ****     else if(uart==(UART_T*)UART5)
 956              		.loc 1 390 12
 957 00ce FB68     		ldr	r3, [r7, #12]
 958 00d0 334A     		ldr	r2, .L48+28
 959 00d2 9342     		cmp	r3, r2
 960 00d4 0BD1     		bne	.L40
 391:Drivers/Library/StdDriver/src/uart.c ****     {
 392:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock source selection */
 393:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkSrcSel = (CLK->CLKSEL3 & CLK_CLKSEL3_UART5SEL_Msk) >> CLK_CLKSEL3_UART5SEL_Pos;
 961              		.loc 1 393 32
 962 00d6 2D4B     		ldr	r3, .L48+8
 963 00d8 DB69     		ldr	r3, [r3, #28]
 964              		.loc 1 393 70
 965 00da 9B0F     		lsrs	r3, r3, #30
 966              		.loc 1 393 26
 967 00dc 03F00303 		and	r3, r3, #3
 968 00e0 FB62     		str	r3, [r7, #44]
 394:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock divider number */
 395:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkDivNum = (CLK->CLKDIV4 & CLK_CLKDIV4_UART5DIV_Msk) >> CLK_CLKDIV4_UART5DIV_Pos;
 969              		.loc 1 395 32
 970 00e2 2A4B     		ldr	r3, .L48+8
 971 00e4 1B6B     		ldr	r3, [r3, #48]
 972              		.loc 1 395 70
 973 00e6 1B0B     		lsrs	r3, r3, #12
 974              		.loc 1 395 26
 975 00e8 03F00F03 		and	r3, r3, #15
 976 00ec BB62     		str	r3, [r7, #40]
 977              	.L40:
 396:Drivers/Library/StdDriver/src/uart.c ****     }
 397:Drivers/Library/StdDriver/src/uart.c **** 
 398:Drivers/Library/StdDriver/src/uart.c ****     /* Get PLL clock frequency if UART clock source selection is PLL */
 399:Drivers/Library/StdDriver/src/uart.c ****     if(u32UartClkSrcSel == 1ul)
 978              		.loc 1 399 7
ARM GAS  /tmp/ccuB66jj.s 			page 25


 979 00ee FB6A     		ldr	r3, [r7, #44]
 980 00f0 012B     		cmp	r3, #1
 981 00f2 08D1     		bne	.L45
 400:Drivers/Library/StdDriver/src/uart.c ****     {
 401:Drivers/Library/StdDriver/src/uart.c ****         u32ClkTbl[u32UartClkSrcSel] = CLK_GetPLLClockFreq();
 982              		.loc 1 401 39
 983 00f4 FFF7FEFF 		bl	CLK_GetPLLClockFreq
 984 00f8 0246     		mov	r2, r0
 985              		.loc 1 401 37
 986 00fa FB6A     		ldr	r3, [r7, #44]
 987 00fc 9B00     		lsls	r3, r3, #2
 988 00fe 3033     		adds	r3, r3, #48
 989 0100 3B44     		add	r3, r3, r7
 990 0102 43F81C2C 		str	r2, [r3, #-28]
 991              	.L45:
 402:Drivers/Library/StdDriver/src/uart.c ****     }
 403:Drivers/Library/StdDriver/src/uart.c ****     else
 404:Drivers/Library/StdDriver/src/uart.c ****     {
 405:Drivers/Library/StdDriver/src/uart.c ****     }
 406:Drivers/Library/StdDriver/src/uart.c **** 
 407:Drivers/Library/StdDriver/src/uart.c ****     /* Set UART baud rate */
 408:Drivers/Library/StdDriver/src/uart.c ****     if(u32baudrate != 0ul)
 992              		.loc 1 408 7
 993 0106 BB68     		ldr	r3, [r7, #8]
 994 0108 002B     		cmp	r3, #0
 995 010a 2FD0     		beq	.L46
 409:Drivers/Library/StdDriver/src/uart.c ****     {
 410:Drivers/Library/StdDriver/src/uart.c ****         u32Baud_Div = UART_BAUD_MODE2_DIVIDER((u32ClkTbl[u32UartClkSrcSel]) / (u32UartClkDivNum + 1
 996              		.loc 1 410 23
 997 010c FB6A     		ldr	r3, [r7, #44]
 998 010e 9B00     		lsls	r3, r3, #2
 999 0110 3033     		adds	r3, r3, #48
 1000 0112 3B44     		add	r3, r3, r7
 1001 0114 53F81C2C 		ldr	r2, [r3, #-28]
 1002 0118 BB6A     		ldr	r3, [r7, #40]
 1003 011a 0133     		adds	r3, r3, #1
 1004 011c B2FBF3F2 		udiv	r2, r2, r3
 1005 0120 BB68     		ldr	r3, [r7, #8]
 1006 0122 5B08     		lsrs	r3, r3, #1
 1007 0124 1A44     		add	r2, r2, r3
 1008 0126 BB68     		ldr	r3, [r7, #8]
 1009 0128 B2FBF3F3 		udiv	r3, r2, r3
 1010              		.loc 1 410 21
 1011 012c 023B     		subs	r3, r3, #2
 1012 012e 7B62     		str	r3, [r7, #36]
 411:Drivers/Library/StdDriver/src/uart.c **** 
 412:Drivers/Library/StdDriver/src/uart.c ****         if(u32Baud_Div > 0xFFFFul)
 1013              		.loc 1 412 11
 1014 0130 7B6A     		ldr	r3, [r7, #36]
 1015 0132 B3F5803F 		cmp	r3, #65536
 1016 0136 14D3     		bcc	.L47
 413:Drivers/Library/StdDriver/src/uart.c ****         {
 414:Drivers/Library/StdDriver/src/uart.c ****             uart->BAUD = (UART_BAUD_MODE0 | UART_BAUD_MODE0_DIVIDER((u32ClkTbl[u32UartClkSrcSel]) /
 1017              		.loc 1 414 45
 1018 0138 FB6A     		ldr	r3, [r7, #44]
 1019 013a 9B00     		lsls	r3, r3, #2
 1020 013c 3033     		adds	r3, r3, #48
ARM GAS  /tmp/ccuB66jj.s 			page 26


 1021 013e 3B44     		add	r3, r3, r7
 1022 0140 53F81C2C 		ldr	r2, [r3, #-28]
 1023 0144 BB6A     		ldr	r3, [r7, #40]
 1024 0146 0133     		adds	r3, r3, #1
 1025 0148 B2FBF3F2 		udiv	r2, r2, r3
 1026 014c BB68     		ldr	r3, [r7, #8]
 1027 014e DB00     		lsls	r3, r3, #3
 1028 0150 1A44     		add	r2, r2, r3
 1029 0152 BB68     		ldr	r3, [r7, #8]
 1030 0154 B2FBF3F3 		udiv	r3, r2, r3
 1031 0158 1B09     		lsrs	r3, r3, #4
 1032              		.loc 1 414 43
 1033 015a 9A1E     		subs	r2, r3, #2
 1034              		.loc 1 414 24
 1035 015c FB68     		ldr	r3, [r7, #12]
 1036 015e 5A62     		str	r2, [r3, #36]
 1037 0160 04E0     		b	.L46
 1038              	.L47:
 415:Drivers/Library/StdDriver/src/uart.c ****         }
 416:Drivers/Library/StdDriver/src/uart.c ****         else
 417:Drivers/Library/StdDriver/src/uart.c ****         {
 418:Drivers/Library/StdDriver/src/uart.c ****             uart->BAUD = (UART_BAUD_MODE2 | u32Baud_Div);
 1039              		.loc 1 418 43
 1040 0162 7B6A     		ldr	r3, [r7, #36]
 1041 0164 43F04052 		orr	r2, r3, #805306368
 1042              		.loc 1 418 24
 1043 0168 FB68     		ldr	r3, [r7, #12]
 1044 016a 5A62     		str	r2, [r3, #36]
 1045              	.L46:
 419:Drivers/Library/StdDriver/src/uart.c ****         }
 420:Drivers/Library/StdDriver/src/uart.c ****     }
 421:Drivers/Library/StdDriver/src/uart.c **** 
 422:Drivers/Library/StdDriver/src/uart.c ****     /* Set UART line configuration */
 423:Drivers/Library/StdDriver/src/uart.c ****     uart->LINE = u32data_width | u32parity | u32stop_bits;
 1046              		.loc 1 423 32
 1047 016c 7A68     		ldr	r2, [r7, #4]
 1048 016e 3B68     		ldr	r3, [r7]
 1049 0170 1A43     		orrs	r2, r2, r3
 1050              		.loc 1 423 44
 1051 0172 3B6C     		ldr	r3, [r7, #64]
 1052 0174 1A43     		orrs	r2, r2, r3
 1053              		.loc 1 423 16
 1054 0176 FB68     		ldr	r3, [r7, #12]
 1055 0178 DA60     		str	r2, [r3, #12]
 424:Drivers/Library/StdDriver/src/uart.c **** }
 1056              		.loc 1 424 1
 1057 017a 00BF     		nop
 1058 017c 3437     		adds	r7, r7, #52
 1059              	.LCFI50:
 1060              		.cfi_def_cfa_offset 12
 1061 017e BD46     		mov	sp, r7
 1062              	.LCFI51:
 1063              		.cfi_def_cfa_register 13
 1064              		@ sp needed
 1065 0180 90BD     		pop	{r4, r7, pc}
 1066              	.L49:
 1067 0182 00BF     		.align	2
ARM GAS  /tmp/ccuB66jj.s 			page 27


 1068              	.L48:
 1069 0184 00000000 		.word	.LC0
 1070 0188 00000740 		.word	1074200576
 1071 018c 00020040 		.word	1073742336
 1072 0190 00100740 		.word	1074204672
 1073 0194 00200740 		.word	1074208768
 1074 0198 00300740 		.word	1074212864
 1075 019c 00400740 		.word	1074216960
 1076 01a0 00500740 		.word	1074221056
 1077              		.cfi_endproc
 1078              	.LFE203:
 1080              		.section	.text.UART_SetTimeoutCnt,"ax",%progbits
 1081              		.align	1
 1082              		.global	UART_SetTimeoutCnt
 1083              		.syntax unified
 1084              		.thumb
 1085              		.thumb_func
 1086              		.fpu fpv4-sp-d16
 1088              	UART_SetTimeoutCnt:
 1089              	.LFB204:
 425:Drivers/Library/StdDriver/src/uart.c **** 
 426:Drivers/Library/StdDriver/src/uart.c **** 
 427:Drivers/Library/StdDriver/src/uart.c **** /**
 428:Drivers/Library/StdDriver/src/uart.c ****  *    @brief        Set Rx timeout count
 429:Drivers/Library/StdDriver/src/uart.c ****  *
 430:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    uart    The pointer of the specified UART module.
 431:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    u32TOC  Rx timeout counter.
 432:Drivers/Library/StdDriver/src/uart.c ****  *
 433:Drivers/Library/StdDriver/src/uart.c ****  *    @return       None
 434:Drivers/Library/StdDriver/src/uart.c ****  *
 435:Drivers/Library/StdDriver/src/uart.c ****  *    @details      This function use to set Rx timeout count.
 436:Drivers/Library/StdDriver/src/uart.c ****  */
 437:Drivers/Library/StdDriver/src/uart.c **** void UART_SetTimeoutCnt(UART_T* uart, uint32_t u32TOC)
 438:Drivers/Library/StdDriver/src/uart.c **** {
 1090              		.loc 1 438 1
 1091              		.cfi_startproc
 1092              		@ args = 0, pretend = 0, frame = 8
 1093              		@ frame_needed = 1, uses_anonymous_args = 0
 1094              		@ link register save eliminated.
 1095 0000 80B4     		push	{r7}
 1096              	.LCFI52:
 1097              		.cfi_def_cfa_offset 4
 1098              		.cfi_offset 7, -4
 1099 0002 83B0     		sub	sp, sp, #12
 1100              	.LCFI53:
 1101              		.cfi_def_cfa_offset 16
 1102 0004 00AF     		add	r7, sp, #0
 1103              	.LCFI54:
 1104              		.cfi_def_cfa_register 7
 1105 0006 7860     		str	r0, [r7, #4]
 1106 0008 3960     		str	r1, [r7]
 439:Drivers/Library/StdDriver/src/uart.c ****     /* Set time-out interrupt comparator */
 440:Drivers/Library/StdDriver/src/uart.c ****     uart->TOUT = (uart->TOUT & ~UART_TOUT_TOIC_Msk) | (u32TOC);
 1107              		.loc 1 440 23
 1108 000a 7B68     		ldr	r3, [r7, #4]
 1109 000c 1B6A     		ldr	r3, [r3, #32]
 1110              		.loc 1 440 30
ARM GAS  /tmp/ccuB66jj.s 			page 28


 1111 000e 23F0FF02 		bic	r2, r3, #255
 1112              		.loc 1 440 53
 1113 0012 3B68     		ldr	r3, [r7]
 1114 0014 1A43     		orrs	r2, r2, r3
 1115              		.loc 1 440 16
 1116 0016 7B68     		ldr	r3, [r7, #4]
 1117 0018 1A62     		str	r2, [r3, #32]
 441:Drivers/Library/StdDriver/src/uart.c **** 
 442:Drivers/Library/StdDriver/src/uart.c ****     /* Set time-out counter enable */
 443:Drivers/Library/StdDriver/src/uart.c ****     uart->INTEN |= UART_INTEN_TOCNTEN_Msk;
 1118              		.loc 1 443 17
 1119 001a 7B68     		ldr	r3, [r7, #4]
 1120 001c 5B68     		ldr	r3, [r3, #4]
 1121 001e 43F40062 		orr	r2, r3, #2048
 1122 0022 7B68     		ldr	r3, [r7, #4]
 1123 0024 5A60     		str	r2, [r3, #4]
 444:Drivers/Library/StdDriver/src/uart.c **** }
 1124              		.loc 1 444 1
 1125 0026 00BF     		nop
 1126 0028 0C37     		adds	r7, r7, #12
 1127              	.LCFI55:
 1128              		.cfi_def_cfa_offset 4
 1129 002a BD46     		mov	sp, r7
 1130              	.LCFI56:
 1131              		.cfi_def_cfa_register 13
 1132              		@ sp needed
 1133 002c 5DF8047B 		ldr	r7, [sp], #4
 1134              	.LCFI57:
 1135              		.cfi_restore 7
 1136              		.cfi_def_cfa_offset 0
 1137 0030 7047     		bx	lr
 1138              		.cfi_endproc
 1139              	.LFE204:
 1141              		.section	.text.UART_SelectIrDAMode,"ax",%progbits
 1142              		.align	1
 1143              		.global	UART_SelectIrDAMode
 1144              		.syntax unified
 1145              		.thumb
 1146              		.thumb_func
 1147              		.fpu fpv4-sp-d16
 1149              	UART_SelectIrDAMode:
 1150              	.LFB205:
 445:Drivers/Library/StdDriver/src/uart.c **** 
 446:Drivers/Library/StdDriver/src/uart.c **** 
 447:Drivers/Library/StdDriver/src/uart.c **** /**
 448:Drivers/Library/StdDriver/src/uart.c ****  *    @brief        Select and configure IrDA function
 449:Drivers/Library/StdDriver/src/uart.c ****  *
 450:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    uart            The pointer of the specified UART module.
 451:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    u32Buadrate     The baudrate of UART module.
 452:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    u32Direction    The direction of UART module in IrDA mode:
 453:Drivers/Library/StdDriver/src/uart.c ****  *                                  - \ref UART_IRDA_TXEN
 454:Drivers/Library/StdDriver/src/uart.c ****  *                                  - \ref UART_IRDA_RXEN
 455:Drivers/Library/StdDriver/src/uart.c ****  *
 456:Drivers/Library/StdDriver/src/uart.c ****  *    @return       None
 457:Drivers/Library/StdDriver/src/uart.c ****   *
 458:Drivers/Library/StdDriver/src/uart.c ****  *    @details      The function is used to configure IrDA relative settings. It consists of TX or 
 459:Drivers/Library/StdDriver/src/uart.c ****  */
ARM GAS  /tmp/ccuB66jj.s 			page 29


 460:Drivers/Library/StdDriver/src/uart.c **** void UART_SelectIrDAMode(UART_T* uart, uint32_t u32Buadrate, uint32_t u32Direction)
 461:Drivers/Library/StdDriver/src/uart.c **** {
 1151              		.loc 1 461 1
 1152              		.cfi_startproc
 1153              		@ args = 0, pretend = 0, frame = 48
 1154              		@ frame_needed = 1, uses_anonymous_args = 0
 1155 0000 90B5     		push	{r4, r7, lr}
 1156              	.LCFI58:
 1157              		.cfi_def_cfa_offset 12
 1158              		.cfi_offset 4, -12
 1159              		.cfi_offset 7, -8
 1160              		.cfi_offset 14, -4
 1161 0002 8DB0     		sub	sp, sp, #52
 1162              	.LCFI59:
 1163              		.cfi_def_cfa_offset 64
 1164 0004 00AF     		add	r7, sp, #0
 1165              	.LCFI60:
 1166              		.cfi_def_cfa_register 7
 1167 0006 F860     		str	r0, [r7, #12]
 1168 0008 B960     		str	r1, [r7, #8]
 1169 000a 7A60     		str	r2, [r7, #4]
 462:Drivers/Library/StdDriver/src/uart.c ****     uint32_t u32UartClkSrcSel=0ul, u32UartClkDivNum=0ul;
 1170              		.loc 1 462 14
 1171 000c 0023     		movs	r3, #0
 1172 000e FB62     		str	r3, [r7, #44]
 1173              		.loc 1 462 36
 1174 0010 0023     		movs	r3, #0
 1175 0012 BB62     		str	r3, [r7, #40]
 463:Drivers/Library/StdDriver/src/uart.c ****     uint32_t u32ClkTbl[4ul] = {__HXT, 0ul, __LXT, __HIRC};
 1176              		.loc 1 463 14
 1177 0014 5B4B     		ldr	r3, .L63
 1178 0016 07F11404 		add	r4, r7, #20
 1179 001a 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1180 001c 84E80F00 		stm	r4, {r0, r1, r2, r3}
 464:Drivers/Library/StdDriver/src/uart.c ****     uint32_t u32Baud_Div;
 465:Drivers/Library/StdDriver/src/uart.c **** 
 466:Drivers/Library/StdDriver/src/uart.c ****     /* Select IrDA function mode */
 467:Drivers/Library/StdDriver/src/uart.c ****     uart->FUNCSEL = UART_FUNCSEL_IrDA;
 1181              		.loc 1 467 19
 1182 0020 FB68     		ldr	r3, [r7, #12]
 1183 0022 0222     		movs	r2, #2
 1184 0024 1A63     		str	r2, [r3, #48]
 468:Drivers/Library/StdDriver/src/uart.c **** 
 469:Drivers/Library/StdDriver/src/uart.c **** 
 470:Drivers/Library/StdDriver/src/uart.c ****     if(uart==UART0)
 1185              		.loc 1 470 7
 1186 0026 FB68     		ldr	r3, [r7, #12]
 1187 0028 574A     		ldr	r2, .L63+4
 1188 002a 9342     		cmp	r3, r2
 1189 002c 0CD1     		bne	.L52
 471:Drivers/Library/StdDriver/src/uart.c ****     {
 472:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock source selection */
 473:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkSrcSel = (CLK->CLKSEL1 & CLK_CLKSEL1_UART0SEL_Msk) >> CLK_CLKSEL1_UART0SEL_Pos;
 1190              		.loc 1 473 32
 1191 002e 574B     		ldr	r3, .L63+8
 1192 0030 5B69     		ldr	r3, [r3, #20]
 1193              		.loc 1 473 70
ARM GAS  /tmp/ccuB66jj.s 			page 30


 1194 0032 1B0E     		lsrs	r3, r3, #24
 1195              		.loc 1 473 26
 1196 0034 03F00303 		and	r3, r3, #3
 1197 0038 FB62     		str	r3, [r7, #44]
 474:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock divider number */
 475:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkDivNum = (CLK->CLKDIV0 & CLK_CLKDIV0_UART0DIV_Msk) >> CLK_CLKDIV0_UART0DIV_Pos;
 1198              		.loc 1 475 32
 1199 003a 544B     		ldr	r3, .L63+8
 1200 003c 1B6A     		ldr	r3, [r3, #32]
 1201              		.loc 1 475 70
 1202 003e 1B0A     		lsrs	r3, r3, #8
 1203              		.loc 1 475 26
 1204 0040 03F00F03 		and	r3, r3, #15
 1205 0044 BB62     		str	r3, [r7, #40]
 1206 0046 52E0     		b	.L53
 1207              	.L52:
 476:Drivers/Library/StdDriver/src/uart.c ****     }
 477:Drivers/Library/StdDriver/src/uart.c ****     else if(uart==UART1)
 1208              		.loc 1 477 12
 1209 0048 FB68     		ldr	r3, [r7, #12]
 1210 004a 514A     		ldr	r2, .L63+12
 1211 004c 9342     		cmp	r3, r2
 1212 004e 0CD1     		bne	.L54
 478:Drivers/Library/StdDriver/src/uart.c ****     {
 479:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock source selection */
 480:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkSrcSel = (CLK->CLKSEL1 & CLK_CLKSEL1_UART1SEL_Msk) >> CLK_CLKSEL1_UART1SEL_Pos;
 1213              		.loc 1 480 32
 1214 0050 4E4B     		ldr	r3, .L63+8
 1215 0052 5B69     		ldr	r3, [r3, #20]
 1216              		.loc 1 480 70
 1217 0054 9B0E     		lsrs	r3, r3, #26
 1218              		.loc 1 480 26
 1219 0056 03F00303 		and	r3, r3, #3
 1220 005a FB62     		str	r3, [r7, #44]
 481:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock divider number */
 482:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkDivNum = (CLK->CLKDIV0 & CLK_CLKDIV0_UART1DIV_Msk) >> CLK_CLKDIV0_UART1DIV_Pos;
 1221              		.loc 1 482 32
 1222 005c 4B4B     		ldr	r3, .L63+8
 1223 005e 1B6A     		ldr	r3, [r3, #32]
 1224              		.loc 1 482 70
 1225 0060 1B0B     		lsrs	r3, r3, #12
 1226              		.loc 1 482 26
 1227 0062 03F00F03 		and	r3, r3, #15
 1228 0066 BB62     		str	r3, [r7, #40]
 1229 0068 41E0     		b	.L53
 1230              	.L54:
 483:Drivers/Library/StdDriver/src/uart.c ****     }
 484:Drivers/Library/StdDriver/src/uart.c ****     else if(uart==UART2)
 1231              		.loc 1 484 12
 1232 006a FB68     		ldr	r3, [r7, #12]
 1233 006c 494A     		ldr	r2, .L63+16
 1234 006e 9342     		cmp	r3, r2
 1235 0070 0BD1     		bne	.L55
 485:Drivers/Library/StdDriver/src/uart.c ****     {
 486:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock source selection */
 487:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkSrcSel = (CLK->CLKSEL3 & CLK_CLKSEL3_UART2SEL_Msk) >> CLK_CLKSEL3_UART2SEL_Pos;
 1236              		.loc 1 487 32
ARM GAS  /tmp/ccuB66jj.s 			page 31


 1237 0072 464B     		ldr	r3, .L63+8
 1238 0074 DB69     		ldr	r3, [r3, #28]
 1239              		.loc 1 487 70
 1240 0076 1B0E     		lsrs	r3, r3, #24
 1241              		.loc 1 487 26
 1242 0078 03F00303 		and	r3, r3, #3
 1243 007c FB62     		str	r3, [r7, #44]
 488:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock divider number */
 489:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkDivNum = (CLK->CLKDIV4 & CLK_CLKDIV4_UART2DIV_Msk) >> CLK_CLKDIV4_UART2DIV_Pos;
 1244              		.loc 1 489 32
 1245 007e 434B     		ldr	r3, .L63+8
 1246 0080 1B6B     		ldr	r3, [r3, #48]
 1247              		.loc 1 489 26
 1248 0082 03F00F03 		and	r3, r3, #15
 1249 0086 BB62     		str	r3, [r7, #40]
 1250 0088 31E0     		b	.L53
 1251              	.L55:
 490:Drivers/Library/StdDriver/src/uart.c ****     }
 491:Drivers/Library/StdDriver/src/uart.c ****     else if(uart==UART3)
 1252              		.loc 1 491 12
 1253 008a FB68     		ldr	r3, [r7, #12]
 1254 008c 424A     		ldr	r2, .L63+20
 1255 008e 9342     		cmp	r3, r2
 1256 0090 0CD1     		bne	.L56
 492:Drivers/Library/StdDriver/src/uart.c ****     {
 493:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock source selection */
 494:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkSrcSel = (CLK->CLKSEL3 & CLK_CLKSEL3_UART3SEL_Msk) >> CLK_CLKSEL3_UART3SEL_Pos;
 1257              		.loc 1 494 32
 1258 0092 3E4B     		ldr	r3, .L63+8
 1259 0094 DB69     		ldr	r3, [r3, #28]
 1260              		.loc 1 494 70
 1261 0096 9B0E     		lsrs	r3, r3, #26
 1262              		.loc 1 494 26
 1263 0098 03F00303 		and	r3, r3, #3
 1264 009c FB62     		str	r3, [r7, #44]
 495:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock divider number */
 496:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkDivNum = (CLK->CLKDIV4 & CLK_CLKDIV4_UART3DIV_Msk) >> CLK_CLKDIV4_UART3DIV_Pos;
 1265              		.loc 1 496 32
 1266 009e 3B4B     		ldr	r3, .L63+8
 1267 00a0 1B6B     		ldr	r3, [r3, #48]
 1268              		.loc 1 496 70
 1269 00a2 1B09     		lsrs	r3, r3, #4
 1270              		.loc 1 496 26
 1271 00a4 03F00F03 		and	r3, r3, #15
 1272 00a8 BB62     		str	r3, [r7, #40]
 1273 00aa 20E0     		b	.L53
 1274              	.L56:
 497:Drivers/Library/StdDriver/src/uart.c ****     }
 498:Drivers/Library/StdDriver/src/uart.c ****     else if(uart==UART4)
 1275              		.loc 1 498 12
 1276 00ac FB68     		ldr	r3, [r7, #12]
 1277 00ae 3B4A     		ldr	r2, .L63+24
 1278 00b0 9342     		cmp	r3, r2
 1279 00b2 0CD1     		bne	.L57
 499:Drivers/Library/StdDriver/src/uart.c ****     {
 500:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock source selection */
 501:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkSrcSel = (CLK->CLKSEL3 & CLK_CLKSEL3_UART4SEL_Msk) >> CLK_CLKSEL3_UART4SEL_Pos;
ARM GAS  /tmp/ccuB66jj.s 			page 32


 1280              		.loc 1 501 32
 1281 00b4 354B     		ldr	r3, .L63+8
 1282 00b6 DB69     		ldr	r3, [r3, #28]
 1283              		.loc 1 501 70
 1284 00b8 1B0F     		lsrs	r3, r3, #28
 1285              		.loc 1 501 26
 1286 00ba 03F00303 		and	r3, r3, #3
 1287 00be FB62     		str	r3, [r7, #44]
 502:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock divider number */
 503:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkDivNum = (CLK->CLKDIV4 & CLK_CLKDIV4_UART4DIV_Msk) >> CLK_CLKDIV4_UART4DIV_Pos;
 1288              		.loc 1 503 32
 1289 00c0 324B     		ldr	r3, .L63+8
 1290 00c2 1B6B     		ldr	r3, [r3, #48]
 1291              		.loc 1 503 70
 1292 00c4 1B0A     		lsrs	r3, r3, #8
 1293              		.loc 1 503 26
 1294 00c6 03F00F03 		and	r3, r3, #15
 1295 00ca BB62     		str	r3, [r7, #40]
 1296 00cc 0FE0     		b	.L53
 1297              	.L57:
 504:Drivers/Library/StdDriver/src/uart.c ****     }
 505:Drivers/Library/StdDriver/src/uart.c ****     else if(uart==UART5)
 1298              		.loc 1 505 12
 1299 00ce FB68     		ldr	r3, [r7, #12]
 1300 00d0 334A     		ldr	r2, .L63+28
 1301 00d2 9342     		cmp	r3, r2
 1302 00d4 0BD1     		bne	.L53
 506:Drivers/Library/StdDriver/src/uart.c ****     {
 507:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock source selection */
 508:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkSrcSel = (CLK->CLKSEL3 & CLK_CLKSEL3_UART5SEL_Msk) >> CLK_CLKSEL3_UART5SEL_Pos;
 1303              		.loc 1 508 32
 1304 00d6 2D4B     		ldr	r3, .L63+8
 1305 00d8 DB69     		ldr	r3, [r3, #28]
 1306              		.loc 1 508 70
 1307 00da 9B0F     		lsrs	r3, r3, #30
 1308              		.loc 1 508 26
 1309 00dc 03F00303 		and	r3, r3, #3
 1310 00e0 FB62     		str	r3, [r7, #44]
 509:Drivers/Library/StdDriver/src/uart.c ****         /* Get UART clock divider number */
 510:Drivers/Library/StdDriver/src/uart.c ****         u32UartClkDivNum = (CLK->CLKDIV4 & CLK_CLKDIV4_UART5DIV_Msk) >> CLK_CLKDIV4_UART5DIV_Pos;
 1311              		.loc 1 510 32
 1312 00e2 2A4B     		ldr	r3, .L63+8
 1313 00e4 1B6B     		ldr	r3, [r3, #48]
 1314              		.loc 1 510 70
 1315 00e6 1B0B     		lsrs	r3, r3, #12
 1316              		.loc 1 510 26
 1317 00e8 03F00F03 		and	r3, r3, #15
 1318 00ec BB62     		str	r3, [r7, #40]
 1319              	.L53:
 511:Drivers/Library/StdDriver/src/uart.c ****     }
 512:Drivers/Library/StdDriver/src/uart.c **** 
 513:Drivers/Library/StdDriver/src/uart.c **** 
 514:Drivers/Library/StdDriver/src/uart.c ****     /* Get PLL clock frequency if UART clock source selection is PLL */
 515:Drivers/Library/StdDriver/src/uart.c ****     if(u32UartClkSrcSel == 1ul)
 1320              		.loc 1 515 7
 1321 00ee FB6A     		ldr	r3, [r7, #44]
 1322 00f0 012B     		cmp	r3, #1
ARM GAS  /tmp/ccuB66jj.s 			page 33


 1323 00f2 08D1     		bne	.L58
 516:Drivers/Library/StdDriver/src/uart.c ****     {
 517:Drivers/Library/StdDriver/src/uart.c ****         u32ClkTbl[u32UartClkSrcSel] = CLK_GetPLLClockFreq();
 1324              		.loc 1 517 39
 1325 00f4 FFF7FEFF 		bl	CLK_GetPLLClockFreq
 1326 00f8 0246     		mov	r2, r0
 1327              		.loc 1 517 37
 1328 00fa FB6A     		ldr	r3, [r7, #44]
 1329 00fc 9B00     		lsls	r3, r3, #2
 1330 00fe 3033     		adds	r3, r3, #48
 1331 0100 3B44     		add	r3, r3, r7
 1332 0102 43F81C2C 		str	r2, [r3, #-28]
 1333              	.L58:
 518:Drivers/Library/StdDriver/src/uart.c ****     }
 519:Drivers/Library/StdDriver/src/uart.c ****     else
 520:Drivers/Library/StdDriver/src/uart.c ****     {
 521:Drivers/Library/StdDriver/src/uart.c ****     }
 522:Drivers/Library/StdDriver/src/uart.c **** 
 523:Drivers/Library/StdDriver/src/uart.c ****     /* Set UART IrDA baud rate in mode 0 */
 524:Drivers/Library/StdDriver/src/uart.c ****     if(u32Buadrate != 0ul)
 1334              		.loc 1 524 7
 1335 0106 BB68     		ldr	r3, [r7, #8]
 1336 0108 002B     		cmp	r3, #0
 1337 010a 1AD0     		beq	.L59
 525:Drivers/Library/StdDriver/src/uart.c ****     {
 526:Drivers/Library/StdDriver/src/uart.c ****         u32Baud_Div = UART_BAUD_MODE0_DIVIDER((u32ClkTbl[u32UartClkSrcSel]) / (u32UartClkDivNum + 1
 1338              		.loc 1 526 23
 1339 010c FB6A     		ldr	r3, [r7, #44]
 1340 010e 9B00     		lsls	r3, r3, #2
 1341 0110 3033     		adds	r3, r3, #48
 1342 0112 3B44     		add	r3, r3, r7
 1343 0114 53F81C2C 		ldr	r2, [r3, #-28]
 1344 0118 BB6A     		ldr	r3, [r7, #40]
 1345 011a 0133     		adds	r3, r3, #1
 1346 011c B2FBF3F2 		udiv	r2, r2, r3
 1347 0120 BB68     		ldr	r3, [r7, #8]
 1348 0122 DB00     		lsls	r3, r3, #3
 1349 0124 1A44     		add	r2, r2, r3
 1350 0126 BB68     		ldr	r3, [r7, #8]
 1351 0128 B2FBF3F3 		udiv	r3, r2, r3
 1352 012c 1B09     		lsrs	r3, r3, #4
 1353              		.loc 1 526 21
 1354 012e 023B     		subs	r3, r3, #2
 1355 0130 7B62     		str	r3, [r7, #36]
 527:Drivers/Library/StdDriver/src/uart.c **** 
 528:Drivers/Library/StdDriver/src/uart.c ****         if(u32Baud_Div < 0xFFFFul)
 1356              		.loc 1 528 11
 1357 0132 7B6A     		ldr	r3, [r7, #36]
 1358 0134 4FF6FE72 		movw	r2, #65534
 1359 0138 9342     		cmp	r3, r2
 1360 013a 02D8     		bhi	.L59
 529:Drivers/Library/StdDriver/src/uart.c ****         {
 530:Drivers/Library/StdDriver/src/uart.c ****             uart->BAUD = (UART_BAUD_MODE0 | u32Baud_Div);
 1361              		.loc 1 530 24
 1362 013c FB68     		ldr	r3, [r7, #12]
 1363 013e 7A6A     		ldr	r2, [r7, #36]
 1364 0140 5A62     		str	r2, [r3, #36]
ARM GAS  /tmp/ccuB66jj.s 			page 34


 1365              	.L59:
 531:Drivers/Library/StdDriver/src/uart.c ****         }
 532:Drivers/Library/StdDriver/src/uart.c ****         else
 533:Drivers/Library/StdDriver/src/uart.c ****         {
 534:Drivers/Library/StdDriver/src/uart.c ****         }
 535:Drivers/Library/StdDriver/src/uart.c ****     }
 536:Drivers/Library/StdDriver/src/uart.c **** 
 537:Drivers/Library/StdDriver/src/uart.c ****     /* Configure IrDA relative settings */
 538:Drivers/Library/StdDriver/src/uart.c ****     if(u32Direction == UART_IRDA_RXEN)
 1366              		.loc 1 538 7
 1367 0142 7B68     		ldr	r3, [r7, #4]
 1368 0144 002B     		cmp	r3, #0
 1369 0146 0CD1     		bne	.L60
 539:Drivers/Library/StdDriver/src/uart.c ****     {
 540:Drivers/Library/StdDriver/src/uart.c ****         uart->IRDA |= UART_IRDA_RXINV_Msk;     /*Rx signal is inverse*/
 1370              		.loc 1 540 20
 1371 0148 FB68     		ldr	r3, [r7, #12]
 1372 014a 9B6A     		ldr	r3, [r3, #40]
 1373 014c 43F04002 		orr	r2, r3, #64
 1374 0150 FB68     		ldr	r3, [r7, #12]
 1375 0152 9A62     		str	r2, [r3, #40]
 541:Drivers/Library/StdDriver/src/uart.c ****         uart->IRDA &= ~UART_IRDA_TXEN_Msk;
 1376              		.loc 1 541 20
 1377 0154 FB68     		ldr	r3, [r7, #12]
 1378 0156 9B6A     		ldr	r3, [r3, #40]
 1379 0158 23F00202 		bic	r2, r3, #2
 1380 015c FB68     		ldr	r3, [r7, #12]
 1381 015e 9A62     		str	r2, [r3, #40]
 542:Drivers/Library/StdDriver/src/uart.c ****     }
 543:Drivers/Library/StdDriver/src/uart.c ****     else
 544:Drivers/Library/StdDriver/src/uart.c ****     {
 545:Drivers/Library/StdDriver/src/uart.c ****         uart->IRDA &= ~UART_IRDA_TXINV_Msk;    /*Tx signal is not inverse*/
 546:Drivers/Library/StdDriver/src/uart.c ****         uart->IRDA |= UART_IRDA_TXEN_Msk;
 547:Drivers/Library/StdDriver/src/uart.c ****     }
 548:Drivers/Library/StdDriver/src/uart.c **** 
 549:Drivers/Library/StdDriver/src/uart.c **** }
 1382              		.loc 1 549 1
 1383 0160 0BE0     		b	.L62
 1384              	.L60:
 545:Drivers/Library/StdDriver/src/uart.c ****         uart->IRDA |= UART_IRDA_TXEN_Msk;
 1385              		.loc 1 545 20
 1386 0162 FB68     		ldr	r3, [r7, #12]
 1387 0164 9B6A     		ldr	r3, [r3, #40]
 1388 0166 23F02002 		bic	r2, r3, #32
 1389 016a FB68     		ldr	r3, [r7, #12]
 1390 016c 9A62     		str	r2, [r3, #40]
 546:Drivers/Library/StdDriver/src/uart.c ****     }
 1391              		.loc 1 546 20
 1392 016e FB68     		ldr	r3, [r7, #12]
 1393 0170 9B6A     		ldr	r3, [r3, #40]
 1394 0172 43F00202 		orr	r2, r3, #2
 1395 0176 FB68     		ldr	r3, [r7, #12]
 1396 0178 9A62     		str	r2, [r3, #40]
 1397              	.L62:
 1398              		.loc 1 549 1
 1399 017a 00BF     		nop
 1400 017c 3437     		adds	r7, r7, #52
ARM GAS  /tmp/ccuB66jj.s 			page 35


 1401              	.LCFI61:
 1402              		.cfi_def_cfa_offset 12
 1403 017e BD46     		mov	sp, r7
 1404              	.LCFI62:
 1405              		.cfi_def_cfa_register 13
 1406              		@ sp needed
 1407 0180 90BD     		pop	{r4, r7, pc}
 1408              	.L64:
 1409 0182 00BF     		.align	2
 1410              	.L63:
 1411 0184 00000000 		.word	.LC0
 1412 0188 00000740 		.word	1074200576
 1413 018c 00020040 		.word	1073742336
 1414 0190 00100740 		.word	1074204672
 1415 0194 00200740 		.word	1074208768
 1416 0198 00300740 		.word	1074212864
 1417 019c 00400740 		.word	1074216960
 1418 01a0 00500740 		.word	1074221056
 1419              		.cfi_endproc
 1420              	.LFE205:
 1422              		.section	.text.UART_SelectRS485Mode,"ax",%progbits
 1423              		.align	1
 1424              		.global	UART_SelectRS485Mode
 1425              		.syntax unified
 1426              		.thumb
 1427              		.thumb_func
 1428              		.fpu fpv4-sp-d16
 1430              	UART_SelectRS485Mode:
 1431              	.LFB206:
 550:Drivers/Library/StdDriver/src/uart.c **** 
 551:Drivers/Library/StdDriver/src/uart.c **** 
 552:Drivers/Library/StdDriver/src/uart.c **** /**
 553:Drivers/Library/StdDriver/src/uart.c ****  *    @brief        Select and configure RS485 function
 554:Drivers/Library/StdDriver/src/uart.c ****  *
 555:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    uart        The pointer of the specified UART module.
 556:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    u32Mode     The operation mode(NMM/AUD/AAD).
 557:Drivers/Library/StdDriver/src/uart.c ****  *                              - \ref UART_ALTCTL_RS485NMM_Msk
 558:Drivers/Library/StdDriver/src/uart.c ****  *                              - \ref UART_ALTCTL_RS485AUD_Msk
 559:Drivers/Library/StdDriver/src/uart.c ****  *                              - \ref UART_ALTCTL_RS485AAD_Msk
 560:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    u32Addr     The RS485 address.
 561:Drivers/Library/StdDriver/src/uart.c ****  *
 562:Drivers/Library/StdDriver/src/uart.c ****  *    @return       None
 563:Drivers/Library/StdDriver/src/uart.c ****  *
 564:Drivers/Library/StdDriver/src/uart.c ****  *    @details      The function is used to set RS485 relative setting.
 565:Drivers/Library/StdDriver/src/uart.c ****  */
 566:Drivers/Library/StdDriver/src/uart.c **** void UART_SelectRS485Mode(UART_T* uart, uint32_t u32Mode, uint32_t u32Addr)
 567:Drivers/Library/StdDriver/src/uart.c **** {
 1432              		.loc 1 567 1
 1433              		.cfi_startproc
 1434              		@ args = 0, pretend = 0, frame = 16
 1435              		@ frame_needed = 1, uses_anonymous_args = 0
 1436              		@ link register save eliminated.
 1437 0000 80B4     		push	{r7}
 1438              	.LCFI63:
 1439              		.cfi_def_cfa_offset 4
 1440              		.cfi_offset 7, -4
 1441 0002 85B0     		sub	sp, sp, #20
ARM GAS  /tmp/ccuB66jj.s 			page 36


 1442              	.LCFI64:
 1443              		.cfi_def_cfa_offset 24
 1444 0004 00AF     		add	r7, sp, #0
 1445              	.LCFI65:
 1446              		.cfi_def_cfa_register 7
 1447 0006 F860     		str	r0, [r7, #12]
 1448 0008 B960     		str	r1, [r7, #8]
 1449 000a 7A60     		str	r2, [r7, #4]
 568:Drivers/Library/StdDriver/src/uart.c ****     /* Select UART RS485 function mode */
 569:Drivers/Library/StdDriver/src/uart.c ****     uart->FUNCSEL = UART_FUNCSEL_RS485;
 1450              		.loc 1 569 19
 1451 000c FB68     		ldr	r3, [r7, #12]
 1452 000e 0322     		movs	r2, #3
 1453 0010 1A63     		str	r2, [r3, #48]
 570:Drivers/Library/StdDriver/src/uart.c **** 
 571:Drivers/Library/StdDriver/src/uart.c ****     /* Set RS585 configuration */
 572:Drivers/Library/StdDriver/src/uart.c ****     uart->ALTCTL &= ~(UART_ALTCTL_RS485NMM_Msk | UART_ALTCTL_RS485AUD_Msk | UART_ALTCTL_RS485AAD_Ms
 1454              		.loc 1 572 18
 1455 0012 FB68     		ldr	r3, [r7, #12]
 1456 0014 DB6A     		ldr	r3, [r3, #44]
 1457 0016 23F07F43 		bic	r3, r3, #-16777216
 1458 001a 23F4E063 		bic	r3, r3, #1792
 1459 001e FA68     		ldr	r2, [r7, #12]
 1460 0020 D362     		str	r3, [r2, #44]
 573:Drivers/Library/StdDriver/src/uart.c ****     uart->ALTCTL |= (u32Mode | (u32Addr << UART_ALTCTL_ADDRMV_Pos));
 1461              		.loc 1 573 18
 1462 0022 FB68     		ldr	r3, [r7, #12]
 1463 0024 DA6A     		ldr	r2, [r3, #44]
 1464              		.loc 1 573 41
 1465 0026 7B68     		ldr	r3, [r7, #4]
 1466 0028 1906     		lsls	r1, r3, #24
 1467              		.loc 1 573 30
 1468 002a BB68     		ldr	r3, [r7, #8]
 1469 002c 0B43     		orrs	r3, r3, r1
 1470              		.loc 1 573 18
 1471 002e 1A43     		orrs	r2, r2, r3
 1472 0030 FB68     		ldr	r3, [r7, #12]
 1473 0032 DA62     		str	r2, [r3, #44]
 574:Drivers/Library/StdDriver/src/uart.c **** }
 1474              		.loc 1 574 1
 1475 0034 00BF     		nop
 1476 0036 1437     		adds	r7, r7, #20
 1477              	.LCFI66:
 1478              		.cfi_def_cfa_offset 4
 1479 0038 BD46     		mov	sp, r7
 1480              	.LCFI67:
 1481              		.cfi_def_cfa_register 13
 1482              		@ sp needed
 1483 003a 5DF8047B 		ldr	r7, [sp], #4
 1484              	.LCFI68:
 1485              		.cfi_restore 7
 1486              		.cfi_def_cfa_offset 0
 1487 003e 7047     		bx	lr
 1488              		.cfi_endproc
 1489              	.LFE206:
 1491              		.section	.text.UART_SelectLINMode,"ax",%progbits
 1492              		.align	1
ARM GAS  /tmp/ccuB66jj.s 			page 37


 1493              		.global	UART_SelectLINMode
 1494              		.syntax unified
 1495              		.thumb
 1496              		.thumb_func
 1497              		.fpu fpv4-sp-d16
 1499              	UART_SelectLINMode:
 1500              	.LFB207:
 575:Drivers/Library/StdDriver/src/uart.c **** 
 576:Drivers/Library/StdDriver/src/uart.c **** 
 577:Drivers/Library/StdDriver/src/uart.c **** /**
 578:Drivers/Library/StdDriver/src/uart.c ****  *    @brief        Select and configure LIN function
 579:Drivers/Library/StdDriver/src/uart.c ****  *
 580:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    uart            The pointer of the specified UART module.
 581:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    u32Mode         The LIN direction :
 582:Drivers/Library/StdDriver/src/uart.c ****  *                                  - \ref UART_ALTCTL_LINTXEN_Msk
 583:Drivers/Library/StdDriver/src/uart.c ****  *                                  - \ref UART_ALTCTL_LINRXEN_Msk
 584:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    u32BreakLength  The break field length.
 585:Drivers/Library/StdDriver/src/uart.c ****  *
 586:Drivers/Library/StdDriver/src/uart.c ****  *    @return       None
 587:Drivers/Library/StdDriver/src/uart.c ****  *
 588:Drivers/Library/StdDriver/src/uart.c ****  *    @details      The function is used to set LIN relative setting.
 589:Drivers/Library/StdDriver/src/uart.c ****  */
 590:Drivers/Library/StdDriver/src/uart.c **** void UART_SelectLINMode(UART_T* uart, uint32_t u32Mode, uint32_t u32BreakLength)
 591:Drivers/Library/StdDriver/src/uart.c **** {
 1501              		.loc 1 591 1
 1502              		.cfi_startproc
 1503              		@ args = 0, pretend = 0, frame = 16
 1504              		@ frame_needed = 1, uses_anonymous_args = 0
 1505              		@ link register save eliminated.
 1506 0000 80B4     		push	{r7}
 1507              	.LCFI69:
 1508              		.cfi_def_cfa_offset 4
 1509              		.cfi_offset 7, -4
 1510 0002 85B0     		sub	sp, sp, #20
 1511              	.LCFI70:
 1512              		.cfi_def_cfa_offset 24
 1513 0004 00AF     		add	r7, sp, #0
 1514              	.LCFI71:
 1515              		.cfi_def_cfa_register 7
 1516 0006 F860     		str	r0, [r7, #12]
 1517 0008 B960     		str	r1, [r7, #8]
 1518 000a 7A60     		str	r2, [r7, #4]
 592:Drivers/Library/StdDriver/src/uart.c ****     /* Select LIN function mode */
 593:Drivers/Library/StdDriver/src/uart.c ****     uart->FUNCSEL = UART_FUNCSEL_LIN;
 1519              		.loc 1 593 19
 1520 000c FB68     		ldr	r3, [r7, #12]
 1521 000e 0122     		movs	r2, #1
 1522 0010 1A63     		str	r2, [r3, #48]
 594:Drivers/Library/StdDriver/src/uart.c **** 
 595:Drivers/Library/StdDriver/src/uart.c ****     /* Select LIN function setting : Tx enable, Rx enable and break field length */
 596:Drivers/Library/StdDriver/src/uart.c ****     uart->ALTCTL &= ~(UART_ALTCTL_LINTXEN_Msk | UART_ALTCTL_LINRXEN_Msk | UART_ALTCTL_BRKFL_Msk);
 1523              		.loc 1 596 18
 1524 0012 FB68     		ldr	r3, [r7, #12]
 1525 0014 DB6A     		ldr	r3, [r3, #44]
 1526 0016 23F0CF02 		bic	r2, r3, #207
 1527 001a FB68     		ldr	r3, [r7, #12]
 1528 001c DA62     		str	r2, [r3, #44]
ARM GAS  /tmp/ccuB66jj.s 			page 38


 597:Drivers/Library/StdDriver/src/uart.c ****     uart->ALTCTL |= (u32Mode | (u32BreakLength << UART_ALTCTL_BRKFL_Pos));
 1529              		.loc 1 597 18
 1530 001e FB68     		ldr	r3, [r7, #12]
 1531 0020 DA6A     		ldr	r2, [r3, #44]
 1532              		.loc 1 597 30
 1533 0022 B968     		ldr	r1, [r7, #8]
 1534 0024 7B68     		ldr	r3, [r7, #4]
 1535 0026 0B43     		orrs	r3, r3, r1
 1536              		.loc 1 597 18
 1537 0028 1A43     		orrs	r2, r2, r3
 1538 002a FB68     		ldr	r3, [r7, #12]
 1539 002c DA62     		str	r2, [r3, #44]
 598:Drivers/Library/StdDriver/src/uart.c **** }
 1540              		.loc 1 598 1
 1541 002e 00BF     		nop
 1542 0030 1437     		adds	r7, r7, #20
 1543              	.LCFI72:
 1544              		.cfi_def_cfa_offset 4
 1545 0032 BD46     		mov	sp, r7
 1546              	.LCFI73:
 1547              		.cfi_def_cfa_register 13
 1548              		@ sp needed
 1549 0034 5DF8047B 		ldr	r7, [sp], #4
 1550              	.LCFI74:
 1551              		.cfi_restore 7
 1552              		.cfi_def_cfa_offset 0
 1553 0038 7047     		bx	lr
 1554              		.cfi_endproc
 1555              	.LFE207:
 1557              		.section	.text.UART_Write,"ax",%progbits
 1558              		.align	1
 1559              		.global	UART_Write
 1560              		.syntax unified
 1561              		.thumb
 1562              		.thumb_func
 1563              		.fpu fpv4-sp-d16
 1565              	UART_Write:
 1566              	.LFB208:
 599:Drivers/Library/StdDriver/src/uart.c **** 
 600:Drivers/Library/StdDriver/src/uart.c **** 
 601:Drivers/Library/StdDriver/src/uart.c **** /**
 602:Drivers/Library/StdDriver/src/uart.c ****  *    @brief        Write UART data
 603:Drivers/Library/StdDriver/src/uart.c ****  *
 604:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    uart            The pointer of the specified UART module.
 605:Drivers/Library/StdDriver/src/uart.c ****  *    @param[in]    pu8TxBuf        The buffer to send the data to UART transmission FIFO.
 606:Drivers/Library/StdDriver/src/uart.c ****  *    @param[out]   u32WriteBytes   The byte number of data.
 607:Drivers/Library/StdDriver/src/uart.c ****  *
 608:Drivers/Library/StdDriver/src/uart.c ****  *    @return       u32Count transfer byte count
 609:Drivers/Library/StdDriver/src/uart.c ****  *
 610:Drivers/Library/StdDriver/src/uart.c ****  *    @details      The function is to write data into TX buffer to transmit data by UART.
 611:Drivers/Library/StdDriver/src/uart.c ****  */
 612:Drivers/Library/StdDriver/src/uart.c **** uint32_t UART_Write(UART_T* uart, uint8_t pu8TxBuf[], uint32_t u32WriteBytes)
 613:Drivers/Library/StdDriver/src/uart.c **** {
 1567              		.loc 1 613 1
 1568              		.cfi_startproc
 1569              		@ args = 0, pretend = 0, frame = 32
 1570              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccuB66jj.s 			page 39


 1571              		@ link register save eliminated.
 1572 0000 80B4     		push	{r7}
 1573              	.LCFI75:
 1574              		.cfi_def_cfa_offset 4
 1575              		.cfi_offset 7, -4
 1576 0002 89B0     		sub	sp, sp, #36
 1577              	.LCFI76:
 1578              		.cfi_def_cfa_offset 40
 1579 0004 00AF     		add	r7, sp, #0
 1580              	.LCFI77:
 1581              		.cfi_def_cfa_register 7
 1582 0006 F860     		str	r0, [r7, #12]
 1583 0008 B960     		str	r1, [r7, #8]
 1584 000a 7A60     		str	r2, [r7, #4]
 614:Drivers/Library/StdDriver/src/uart.c ****     uint32_t  u32Count, u32delayno;
 615:Drivers/Library/StdDriver/src/uart.c ****     uint32_t  u32Exit = 0ul;
 1585              		.loc 1 615 15
 1586 000c 0023     		movs	r3, #0
 1587 000e 7B61     		str	r3, [r7, #20]
 616:Drivers/Library/StdDriver/src/uart.c **** 
 617:Drivers/Library/StdDriver/src/uart.c ****     for(u32Count = 0ul; u32Count != u32WriteBytes; u32Count++)
 1588              		.loc 1 617 18
 1589 0010 0023     		movs	r3, #0
 1590 0012 FB61     		str	r3, [r7, #28]
 1591              		.loc 1 617 5
 1592 0014 1FE0     		b	.L68
 1593              	.L74:
 618:Drivers/Library/StdDriver/src/uart.c ****     {
 619:Drivers/Library/StdDriver/src/uart.c ****         u32delayno = 0ul;
 1594              		.loc 1 619 20
 1595 0016 0023     		movs	r3, #0
 1596 0018 BB61     		str	r3, [r7, #24]
 620:Drivers/Library/StdDriver/src/uart.c ****         while(uart->FIFOSTS & UART_FIFOSTS_TXFULL_Msk)   /* Check Tx Full */
 1597              		.loc 1 620 14
 1598 001a 09E0     		b	.L69
 1599              	.L71:
 621:Drivers/Library/StdDriver/src/uart.c ****         {
 622:Drivers/Library/StdDriver/src/uart.c ****             u32delayno++;
 1600              		.loc 1 622 23
 1601 001c BB69     		ldr	r3, [r7, #24]
 1602 001e 0133     		adds	r3, r3, #1
 1603 0020 BB61     		str	r3, [r7, #24]
 623:Drivers/Library/StdDriver/src/uart.c ****             if(u32delayno >= 0x40000000ul)
 1604              		.loc 1 623 15
 1605 0022 BB69     		ldr	r3, [r7, #24]
 1606 0024 B3F1804F 		cmp	r3, #1073741824
 1607 0028 02D3     		bcc	.L69
 624:Drivers/Library/StdDriver/src/uart.c ****             {
 625:Drivers/Library/StdDriver/src/uart.c ****                 u32Exit = 1ul;
 1608              		.loc 1 625 25
 1609 002a 0123     		movs	r3, #1
 1610 002c 7B61     		str	r3, [r7, #20]
 626:Drivers/Library/StdDriver/src/uart.c ****                 break;
 1611              		.loc 1 626 17
 1612 002e 05E0     		b	.L70
 1613              	.L69:
 620:Drivers/Library/StdDriver/src/uart.c ****         {
ARM GAS  /tmp/ccuB66jj.s 			page 40


 1614              		.loc 1 620 19
 1615 0030 FB68     		ldr	r3, [r7, #12]
 1616 0032 9B69     		ldr	r3, [r3, #24]
 620:Drivers/Library/StdDriver/src/uart.c ****         {
 1617              		.loc 1 620 29
 1618 0034 03F40003 		and	r3, r3, #8388608
 620:Drivers/Library/StdDriver/src/uart.c ****         {
 1619              		.loc 1 620 14
 1620 0038 002B     		cmp	r3, #0
 1621 003a EFD1     		bne	.L71
 1622              	.L70:
 627:Drivers/Library/StdDriver/src/uart.c ****             }
 628:Drivers/Library/StdDriver/src/uart.c ****             else
 629:Drivers/Library/StdDriver/src/uart.c ****             {
 630:Drivers/Library/StdDriver/src/uart.c ****             }
 631:Drivers/Library/StdDriver/src/uart.c ****         }
 632:Drivers/Library/StdDriver/src/uart.c **** 
 633:Drivers/Library/StdDriver/src/uart.c ****         if(u32Exit == 1ul)
 1623              		.loc 1 633 11
 1624 003c 7B69     		ldr	r3, [r7, #20]
 1625 003e 012B     		cmp	r3, #1
 1626 0040 0ED0     		beq	.L76
 634:Drivers/Library/StdDriver/src/uart.c ****         {
 635:Drivers/Library/StdDriver/src/uart.c ****             break;
 636:Drivers/Library/StdDriver/src/uart.c ****         }
 637:Drivers/Library/StdDriver/src/uart.c ****         else
 638:Drivers/Library/StdDriver/src/uart.c ****         {
 639:Drivers/Library/StdDriver/src/uart.c ****             uart->DAT = pu8TxBuf[u32Count];    /* Send UART Data from buffer */
 1627              		.loc 1 639 33 discriminator 2
 1628 0042 BA68     		ldr	r2, [r7, #8]
 1629 0044 FB69     		ldr	r3, [r7, #28]
 1630 0046 1344     		add	r3, r3, r2
 1631 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1632 004a 1A46     		mov	r2, r3
 1633              		.loc 1 639 23 discriminator 2
 1634 004c FB68     		ldr	r3, [r7, #12]
 1635 004e 1A60     		str	r2, [r3]
 617:Drivers/Library/StdDriver/src/uart.c ****     {
 1636              		.loc 1 617 60 discriminator 2
 1637 0050 FB69     		ldr	r3, [r7, #28]
 1638 0052 0133     		adds	r3, r3, #1
 1639 0054 FB61     		str	r3, [r7, #28]
 1640              	.L68:
 617:Drivers/Library/StdDriver/src/uart.c ****     {
 1641              		.loc 1 617 5 discriminator 1
 1642 0056 FA69     		ldr	r2, [r7, #28]
 1643 0058 7B68     		ldr	r3, [r7, #4]
 1644 005a 9A42     		cmp	r2, r3
 1645 005c DBD1     		bne	.L74
 1646 005e 00E0     		b	.L73
 1647              	.L76:
 635:Drivers/Library/StdDriver/src/uart.c ****         }
 1648              		.loc 1 635 13
 1649 0060 00BF     		nop
 1650              	.L73:
 640:Drivers/Library/StdDriver/src/uart.c ****         }
 641:Drivers/Library/StdDriver/src/uart.c ****     }
ARM GAS  /tmp/ccuB66jj.s 			page 41


 642:Drivers/Library/StdDriver/src/uart.c **** 
 643:Drivers/Library/StdDriver/src/uart.c ****     return u32Count;
 1651              		.loc 1 643 12
 1652 0062 FB69     		ldr	r3, [r7, #28]
 644:Drivers/Library/StdDriver/src/uart.c **** }
 1653              		.loc 1 644 1
 1654 0064 1846     		mov	r0, r3
 1655 0066 2437     		adds	r7, r7, #36
 1656              	.LCFI78:
 1657              		.cfi_def_cfa_offset 4
 1658 0068 BD46     		mov	sp, r7
 1659              	.LCFI79:
 1660              		.cfi_def_cfa_register 13
 1661              		@ sp needed
 1662 006a 5DF8047B 		ldr	r7, [sp], #4
 1663              	.LCFI80:
 1664              		.cfi_restore 7
 1665              		.cfi_def_cfa_offset 0
 1666 006e 7047     		bx	lr
 1667              		.cfi_endproc
 1668              	.LFE208:
 1670              		.text
 1671              	.Letext0:
 1672              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1673              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1674              		.file 4 "Drivers/Library/Device/Nuvoton_M480/Include/clk_reg.h"
 1675              		.file 5 "Drivers/Library/Device/Nuvoton_M480/Include/uart_reg.h"
ARM GAS  /tmp/ccuB66jj.s 			page 42


DEFINED SYMBOLS
                            *ABS*:0000000000000000 uart.c
     /tmp/ccuB66jj.s:18     .text.UART_ClearIntFlag:0000000000000000 $t
     /tmp/ccuB66jj.s:26     .text.UART_ClearIntFlag:0000000000000000 UART_ClearIntFlag
     /tmp/ccuB66jj.s:128    .text.UART_ClearIntFlag:000000000000007c $d
     /tmp/ccuB66jj.s:133    .text.UART_Close:0000000000000000 $t
     /tmp/ccuB66jj.s:140    .text.UART_Close:0000000000000000 UART_Close
     /tmp/ccuB66jj.s:180    .text.UART_DisableFlowCtrl:0000000000000000 $t
     /tmp/ccuB66jj.s:187    .text.UART_DisableFlowCtrl:0000000000000000 UART_DisableFlowCtrl
     /tmp/ccuB66jj.s:229    .text.UART_DisableInt:0000000000000000 $t
     /tmp/ccuB66jj.s:236    .text.UART_DisableInt:0000000000000000 UART_DisableInt
     /tmp/ccuB66jj.s:281    .text.UART_EnableFlowCtrl:0000000000000000 $t
     /tmp/ccuB66jj.s:288    .text.UART_EnableFlowCtrl:0000000000000000 UART_EnableFlowCtrl
     /tmp/ccuB66jj.s:342    .text.UART_EnableInt:0000000000000000 $t
     /tmp/ccuB66jj.s:349    .text.UART_EnableInt:0000000000000000 UART_EnableInt
     /tmp/ccuB66jj.s:393    .rodata:0000000000000000 $d
     /tmp/ccuB66jj.s:400    .text.UART_Open:0000000000000000 $t
     /tmp/ccuB66jj.s:407    .text.UART_Open:0000000000000000 UART_Open
     /tmp/ccuB66jj.s:673    .text.UART_Open:000000000000018c $d
     /tmp/ccuB66jj.s:685    .text.UART_Read:0000000000000000 $t
     /tmp/ccuB66jj.s:692    .text.UART_Read:0000000000000000 UART_Read
     /tmp/ccuB66jj.s:800    .text.UART_SetLineConfig:0000000000000000 $t
     /tmp/ccuB66jj.s:807    .text.UART_SetLineConfig:0000000000000000 UART_SetLineConfig
     /tmp/ccuB66jj.s:1069   .text.UART_SetLineConfig:0000000000000184 $d
     /tmp/ccuB66jj.s:1081   .text.UART_SetTimeoutCnt:0000000000000000 $t
     /tmp/ccuB66jj.s:1088   .text.UART_SetTimeoutCnt:0000000000000000 UART_SetTimeoutCnt
     /tmp/ccuB66jj.s:1142   .text.UART_SelectIrDAMode:0000000000000000 $t
     /tmp/ccuB66jj.s:1149   .text.UART_SelectIrDAMode:0000000000000000 UART_SelectIrDAMode
     /tmp/ccuB66jj.s:1411   .text.UART_SelectIrDAMode:0000000000000184 $d
     /tmp/ccuB66jj.s:1423   .text.UART_SelectRS485Mode:0000000000000000 $t
     /tmp/ccuB66jj.s:1430   .text.UART_SelectRS485Mode:0000000000000000 UART_SelectRS485Mode
     /tmp/ccuB66jj.s:1492   .text.UART_SelectLINMode:0000000000000000 $t
     /tmp/ccuB66jj.s:1499   .text.UART_SelectLINMode:0000000000000000 UART_SelectLINMode
     /tmp/ccuB66jj.s:1558   .text.UART_Write:0000000000000000 $t
     /tmp/ccuB66jj.s:1565   .text.UART_Write:0000000000000000 UART_Write

UNDEFINED SYMBOLS
CLK_GetPLLClockFreq
